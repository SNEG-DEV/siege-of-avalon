// FactoryX
//
// Copyright: © FactoryX. All rights reserved.
//
// Project: WinApi.DirectX - D3D1
// Project location: https://sourceforge.net/projects/MFPack
//                   https://github.com/FactoryXCode/MfPack
// Module: WinApi.DirectX.D3DCommon.pas
// Kind: Pascal / Delphi unit
// Release date: 30-04-2019
// Language: ENU
//
// Revision Version: 3.0.0
//
// Description: D3D-version-neutral runtime information.
//
// Organisation: FactoryX
// Initiator(s): Tony (maXcomX), Peter (OzShips)
// Contributor(s): Tony Kalf (maXcomX), Peter Larson (ozships)
//
//------------------------------------------------------------------------------
// CHANGE LOG
// Date       Person              Reason
// ---------- ------------------- ----------------------------------------------
// 13/08/2020 All                 Enigma release. New layout and namespaces
//------------------------------------------------------------------------------
//
// Remarks: - Requires Windows Vista or later.
//            New apps should use the latest Direct3D API
//
// Related objects: -
// Related projects: MfPackX300
// Known Issues: -
//
// Compiler version: 23 up to 33
// SDK version: 10.0.19041.0
//
// Todo: -
//
//==============================================================================
// Source: d3dcommon.h
//
// Copyright (c) Microsoft Corporation. All rights reserved.
//==============================================================================
//
// LICENSE
//
// The contents of this file are subject to the Mozilla Public License
// Version 2.0 (the "License"); you may not use this file except in
// compliance with the License. You may obtain a copy of the License at
// https://www.mozilla.org/en-US/MPL/2.0/
//
// Software distributed under the License is distributed on an "AS IS"
// basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
// License for the specific language governing rights and limitations
// under the License.
//
// Users may distribute this source code provided that this header is included
// in full at the top of the file.
//
//==============================================================================
unit WinApi.DirectX.D3DCommon;

  {$HPPEMIT '#include "d3dcommon.h"'}

interface

uses
  Winapi.Windows;

  {$WEAKPACKAGEUNIT ON}
  {$ALIGN ON}
  {$MINENUMSIZE 4}

  {$IFDEF WIN32}
    {$ALIGN 1}
  {$ELSE}
    {$ALIGN 8} // Win64
  {$ENDIF}

  {$WARN BOUNDS_ERROR OFF}

//----------------------------------------------------------------------------
//
// D3D-version-neutral runtime information.
//
//----------------------------------------------------------------------------

type
  PD3D_DRIVER_TYPE = ^D3D_DRIVER_TYPE;
  D3D_DRIVER_TYPE = DWord;
  {$EXTERNALSYM D3D_DRIVER_TYPE}
const
  D3D_DRIVER_TYPE_UNKNOWN   = D3D_DRIVER_TYPE(0);
  {$EXTERNALSYM D3D_DRIVER_TYPE_UNKNOWN}
  D3D_DRIVER_TYPE_HARDWARE  = D3D_DRIVER_TYPE(1);
  {$EXTERNALSYM D3D_DRIVER_TYPE_HARDWARE}
  D3D_DRIVER_TYPE_REFERENCE = D3D_DRIVER_TYPE(2);
  {$EXTERNALSYM D3D_DRIVER_TYPE_REFERENCE}
  D3D_DRIVER_TYPE_NULL      = D3D_DRIVER_TYPE(3);
  {$EXTERNALSYM D3D_DRIVER_TYPE_NULL}
  D3D_DRIVER_TYPE_SOFTWARE  = D3D_DRIVER_TYPE(4);
  {$EXTERNALSYM D3D_DRIVER_TYPE_SOFTWARE}
  D3D_DRIVER_TYPE_WARP      = D3D_DRIVER_TYPE(5);
  {$EXTERNALSYM D3D_DRIVER_TYPE_WARP}


type
  PD3D_FEATURE_LEVEL = ^D3D_FEATURE_LEVEL;
  D3D_FEATURE_LEVEL = DWord;
  {$EXTERNALSYM D3D_FEATURE_LEVEL}
const
  D3D_FEATURE_LEVEL_1_0_CORE	= D3D_FEATURE_LEVEL($1000);
  {$EXTERNALSYM D3D_FEATURE_LEVEL_1_0_CORE}
  D3D_FEATURE_LEVEL_9_1       = D3D_FEATURE_LEVEL($9100);
  {$EXTERNALSYM D3D_FEATURE_LEVEL_9_1}
  D3D_FEATURE_LEVEL_9_2       = D3D_FEATURE_LEVEL($9200);
  {$EXTERNALSYM D3D_FEATURE_LEVEL_9_2}
  D3D_FEATURE_LEVEL_9_3       = D3D_FEATURE_LEVEL($9300);
  {$EXTERNALSYM D3D_FEATURE_LEVEL_9_3}
  D3D_FEATURE_LEVEL_10_0      = D3D_FEATURE_LEVEL($A000);
  {$EXTERNALSYM D3D_FEATURE_LEVEL_10_0}
  D3D_FEATURE_LEVEL_10_1      = D3D_FEATURE_LEVEL($A100);
  {$EXTERNALSYM D3D_FEATURE_LEVEL_10_1}
  D3D_FEATURE_LEVEL_11_0      = D3D_FEATURE_LEVEL($B000);
  {$EXTERNALSYM D3D_FEATURE_LEVEL_11_0}
  D3D_FEATURE_LEVEL_11_1      = D3D_FEATURE_LEVEL($B100);
  {$EXTERNALSYM D3D_FEATURE_LEVEL_11_1}
  D3D_FEATURE_LEVEL_12_0      = D3D_FEATURE_LEVEL($C000);
  {$EXTERNALSYM D3D_FEATURE_LEVEL_12_0}
  D3D_FEATURE_LEVEL_12_1      = D3D_FEATURE_LEVEL($C100);
  {$EXTERNALSYM D3D_FEATURE_LEVEL_12_1}


const

  D3D_FL9_1_REQ_TEXTURE1D_U_DIMENSION        = DWord(2048);
  {$EXTERNALSYM D3D_FL9_1_REQ_TEXTURE1D_U_DIMENSION}
  D3D_FL9_3_REQ_TEXTURE1D_U_DIMENSION        = DWord(4096);
  {$EXTERNALSYM D3D_FL9_3_REQ_TEXTURE1D_U_DIMENSION}
  D3D_FL9_1_REQ_TEXTURE2D_U_OR_V_DIMENSION   = DWord(2048);
  {$EXTERNALSYM D3D_FL9_1_REQ_TEXTURE2D_U_OR_V_DIMENSION}
  D3D_FL9_3_REQ_TEXTURE2D_U_OR_V_DIMENSION   = DWord(4096);
  {$EXTERNALSYM D3D_FL9_3_REQ_TEXTURE2D_U_OR_V_DIMENSION}
  D3D_FL9_1_REQ_TEXTURECUBE_DIMENSION        = DWord(512);
  {$EXTERNALSYM D3D_FL9_1_REQ_TEXTURECUBE_DIMENSION}
  D3D_FL9_3_REQ_TEXTURECUBE_DIMENSION        = DWord(4096);
  {$EXTERNALSYM D3D_FL9_3_REQ_TEXTURECUBE_DIMENSION}
  D3D_FL9_1_REQ_TEXTURE3D_U_V_OR_W_DIMENSION = DWord(256);
  {$EXTERNALSYM D3D_FL9_1_REQ_TEXTURE3D_U_V_OR_W_DIMENSION}
  D3D_FL9_1_DEFAULT_MAX_ANISOTROPY           = DWord(2);
  {$EXTERNALSYM D3D_FL9_1_DEFAULT_MAX_ANISOTROPY}
  D3D_FL9_1_IA_PRIMITIVE_MAX_COUNT           = DWord(65535);
  {$EXTERNALSYM D3D_FL9_1_IA_PRIMITIVE_MAX_COUNT}
  D3D_FL9_2_IA_PRIMITIVE_MAX_COUNT           = DWord(1048575);
  {$EXTERNALSYM D3D_FL9_2_IA_PRIMITIVE_MAX_COUNT}
  D3D_FL9_1_SIMULTANEOUS_RENDER_TARGET_COUNT = DWord(1);
  {$EXTERNALSYM D3D_FL9_1_SIMULTANEOUS_RENDER_TARGET_COUNT}
  D3D_FL9_3_SIMULTANEOUS_RENDER_TARGET_COUNT = DWord(4);
  {$EXTERNALSYM D3D_FL9_3_SIMULTANEOUS_RENDER_TARGET_COUNT}
  D3D_FL9_1_MAX_TEXTURE_REPEAT               = DWord(128);
  {$EXTERNALSYM D3D_FL9_1_MAX_TEXTURE_REPEAT}
  D3D_FL9_2_MAX_TEXTURE_REPEAT               = DWord(2048);
  {$EXTERNALSYM D3D_FL9_2_MAX_TEXTURE_REPEAT}
  D3D_FL9_3_MAX_TEXTURE_REPEAT               = DWord(8192);
  {$EXTERNALSYM D3D_FL9_3_MAX_TEXTURE_REPEAT}


type
  PD3D_PRIMITIVE_TOPOLOGY = ^D3D_PRIMITIVE_TOPOLOGY;
  D3D_PRIMITIVE_TOPOLOGY = DWord;
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY}
const
  D3D_PRIMITIVE_TOPOLOGY_UNDEFINED                    = D3D_PRIMITIVE_TOPOLOGY(0);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_UNDEFINED}
  D3D_PRIMITIVE_TOPOLOGY_POINTLIST                    = D3D_PRIMITIVE_TOPOLOGY(1);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_POINTLIST}
  D3D_PRIMITIVE_TOPOLOGY_LINELIST                     = D3D_PRIMITIVE_TOPOLOGY(2);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_LINELIST}
  D3D_PRIMITIVE_TOPOLOGY_LINESTRIP                    = D3D_PRIMITIVE_TOPOLOGY(3);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_LINESTRIP}
  D3D_PRIMITIVE_TOPOLOGY_TRIANGLELIST                 = D3D_PRIMITIVE_TOPOLOGY(4);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_TRIANGLELIST}
  D3D_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP                = D3D_PRIMITIVE_TOPOLOGY(5);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP}
  // 6 is reserved for legacy triangle fans
  // Adjacency values should be equal to ($8  non-adjacency):
  D3D_PRIMITIVE_TOPOLOGY_LINELIST_ADJ                 = D3D_PRIMITIVE_TOPOLOGY(10);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_LINELIST_ADJ}
  D3D_PRIMITIVE_TOPOLOGY_LINESTRIP_ADJ                = D3D_PRIMITIVE_TOPOLOGY(11);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_LINESTRIP_ADJ}
  D3D_PRIMITIVE_TOPOLOGY_TRIANGLELIST_ADJ             = D3D_PRIMITIVE_TOPOLOGY(12);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_TRIANGLELIST_ADJ}
  D3D_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP_ADJ            = D3D_PRIMITIVE_TOPOLOGY(13);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP_ADJ}
  D3D_PRIMITIVE_TOPOLOGY_1_CONTROL_POINT_PATCHLIST    = D3D_PRIMITIVE_TOPOLOGY(33);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_1_CONTROL_POINT_PATCHLIST}
  D3D_PRIMITIVE_TOPOLOGY_2_CONTROL_POINT_PATCHLIST    = D3D_PRIMITIVE_TOPOLOGY(34);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_2_CONTROL_POINT_PATCHLIST}
  D3D_PRIMITIVE_TOPOLOGY_3_CONTROL_POINT_PATCHLIST    = D3D_PRIMITIVE_TOPOLOGY(35);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_3_CONTROL_POINT_PATCHLIST}
  D3D_PRIMITIVE_TOPOLOGY_4_CONTROL_POINT_PATCHLIST    = D3D_PRIMITIVE_TOPOLOGY(36);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_4_CONTROL_POINT_PATCHLIST}
  D3D_PRIMITIVE_TOPOLOGY_5_CONTROL_POINT_PATCHLIST    = D3D_PRIMITIVE_TOPOLOGY(37);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_5_CONTROL_POINT_PATCHLIST}
  D3D_PRIMITIVE_TOPOLOGY_6_CONTROL_POINT_PATCHLIST    = D3D_PRIMITIVE_TOPOLOGY(38);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_6_CONTROL_POINT_PATCHLIST}
  D3D_PRIMITIVE_TOPOLOGY_7_CONTROL_POINT_PATCHLIST    = D3D_PRIMITIVE_TOPOLOGY(39);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_7_CONTROL_POINT_PATCHLIST}
  D3D_PRIMITIVE_TOPOLOGY_8_CONTROL_POINT_PATCHLIST    = D3D_PRIMITIVE_TOPOLOGY(40);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_8_CONTROL_POINT_PATCHLIST}
  D3D_PRIMITIVE_TOPOLOGY_9_CONTROL_POINT_PATCHLIST    = D3D_PRIMITIVE_TOPOLOGY(41);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_9_CONTROL_POINT_PATCHLIST}
  D3D_PRIMITIVE_TOPOLOGY_10_CONTROL_POINT_PATCHLIST   = D3D_PRIMITIVE_TOPOLOGY(42);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_10_CONTROL_POINT_PATCHLIST}
  D3D_PRIMITIVE_TOPOLOGY_11_CONTROL_POINT_PATCHLIST   = D3D_PRIMITIVE_TOPOLOGY(43);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_11_CONTROL_POINT_PATCHLIST}
  D3D_PRIMITIVE_TOPOLOGY_12_CONTROL_POINT_PATCHLIST   = D3D_PRIMITIVE_TOPOLOGY(44);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_12_CONTROL_POINT_PATCHLIST}
  D3D_PRIMITIVE_TOPOLOGY_13_CONTROL_POINT_PATCHLIST   = D3D_PRIMITIVE_TOPOLOGY(45);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_13_CONTROL_POINT_PATCHLIST}
  D3D_PRIMITIVE_TOPOLOGY_14_CONTROL_POINT_PATCHLIST   = D3D_PRIMITIVE_TOPOLOGY(46);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_14_CONTROL_POINT_PATCHLIST}
  D3D_PRIMITIVE_TOPOLOGY_15_CONTROL_POINT_PATCHLIST   = D3D_PRIMITIVE_TOPOLOGY(47);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_15_CONTROL_POINT_PATCHLIST}
  D3D_PRIMITIVE_TOPOLOGY_16_CONTROL_POINT_PATCHLIST   = D3D_PRIMITIVE_TOPOLOGY(48);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_16_CONTROL_POINT_PATCHLIST}
  D3D_PRIMITIVE_TOPOLOGY_17_CONTROL_POINT_PATCHLIST   = D3D_PRIMITIVE_TOPOLOGY(49);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_17_CONTROL_POINT_PATCHLIST}
  D3D_PRIMITIVE_TOPOLOGY_18_CONTROL_POINT_PATCHLIST   = D3D_PRIMITIVE_TOPOLOGY(50);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_18_CONTROL_POINT_PATCHLIST}
  D3D_PRIMITIVE_TOPOLOGY_19_CONTROL_POINT_PATCHLIST   = D3D_PRIMITIVE_TOPOLOGY(51);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_19_CONTROL_POINT_PATCHLIST}
  D3D_PRIMITIVE_TOPOLOGY_20_CONTROL_POINT_PATCHLIST   = D3D_PRIMITIVE_TOPOLOGY(52);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_20_CONTROL_POINT_PATCHLIST}
  D3D_PRIMITIVE_TOPOLOGY_21_CONTROL_POINT_PATCHLIST   = D3D_PRIMITIVE_TOPOLOGY(53);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_21_CONTROL_POINT_PATCHLIST}
  D3D_PRIMITIVE_TOPOLOGY_22_CONTROL_POINT_PATCHLIST   = D3D_PRIMITIVE_TOPOLOGY(54);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_22_CONTROL_POINT_PATCHLIST}
  D3D_PRIMITIVE_TOPOLOGY_23_CONTROL_POINT_PATCHLIST   = D3D_PRIMITIVE_TOPOLOGY(55);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_23_CONTROL_POINT_PATCHLIST}
  D3D_PRIMITIVE_TOPOLOGY_24_CONTROL_POINT_PATCHLIST   = D3D_PRIMITIVE_TOPOLOGY(56);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_24_CONTROL_POINT_PATCHLIST}
  D3D_PRIMITIVE_TOPOLOGY_25_CONTROL_POINT_PATCHLIST   = D3D_PRIMITIVE_TOPOLOGY(57);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_25_CONTROL_POINT_PATCHLIST}
  D3D_PRIMITIVE_TOPOLOGY_26_CONTROL_POINT_PATCHLIST   = D3D_PRIMITIVE_TOPOLOGY(58);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_26_CONTROL_POINT_PATCHLIST}
  D3D_PRIMITIVE_TOPOLOGY_27_CONTROL_POINT_PATCHLIST   = D3D_PRIMITIVE_TOPOLOGY(59);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_27_CONTROL_POINT_PATCHLIST}
  D3D_PRIMITIVE_TOPOLOGY_28_CONTROL_POINT_PATCHLIST   = D3D_PRIMITIVE_TOPOLOGY(60);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_28_CONTROL_POINT_PATCHLIST}
  D3D_PRIMITIVE_TOPOLOGY_29_CONTROL_POINT_PATCHLIST   = D3D_PRIMITIVE_TOPOLOGY(61);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_29_CONTROL_POINT_PATCHLIST}
  D3D_PRIMITIVE_TOPOLOGY_30_CONTROL_POINT_PATCHLIST   = D3D_PRIMITIVE_TOPOLOGY(62);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_30_CONTROL_POINT_PATCHLIST}
  D3D_PRIMITIVE_TOPOLOGY_31_CONTROL_POINT_PATCHLIST   = D3D_PRIMITIVE_TOPOLOGY(63);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_31_CONTROL_POINT_PATCHLIST}
  D3D_PRIMITIVE_TOPOLOGY_32_CONTROL_POINT_PATCHLIST   = D3D_PRIMITIVE_TOPOLOGY(64);
  {$EXTERNALSYM D3D_PRIMITIVE_TOPOLOGY_32_CONTROL_POINT_PATCHLIST}
  D3D10_PRIMITIVE_TOPOLOGY_UNDEFINED                  = D3D_PRIMITIVE_TOPOLOGY_UNDEFINED;
  {$EXTERNALSYM D3D10_PRIMITIVE_TOPOLOGY_UNDEFINED}
  D3D10_PRIMITIVE_TOPOLOGY_POINTLIST                  = D3D_PRIMITIVE_TOPOLOGY_POINTLIST;
  {$EXTERNALSYM D3D10_PRIMITIVE_TOPOLOGY_POINTLIST}
  D3D10_PRIMITIVE_TOPOLOGY_LINELIST                   = D3D_PRIMITIVE_TOPOLOGY_LINELIST;
  {$EXTERNALSYM D3D10_PRIMITIVE_TOPOLOGY_LINELIST}
  D3D10_PRIMITIVE_TOPOLOGY_LINESTRIP                  = D3D_PRIMITIVE_TOPOLOGY_LINESTRIP;
  {$EXTERNALSYM D3D10_PRIMITIVE_TOPOLOGY_LINESTRIP}
  D3D10_PRIMITIVE_TOPOLOGY_TRIANGLELIST               = D3D_PRIMITIVE_TOPOLOGY_TRIANGLELIST;
  {$EXTERNALSYM D3D10_PRIMITIVE_TOPOLOGY_TRIANGLELIST}
  D3D10_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP              = D3D_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP;
  {$EXTERNALSYM D3D10_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP}
  D3D10_PRIMITIVE_TOPOLOGY_LINELIST_ADJ               = D3D_PRIMITIVE_TOPOLOGY_LINELIST_ADJ;
  {$EXTERNALSYM D3D10_PRIMITIVE_TOPOLOGY_LINELIST_ADJ}
  D3D10_PRIMITIVE_TOPOLOGY_LINESTRIP_ADJ              = D3D_PRIMITIVE_TOPOLOGY_LINESTRIP_ADJ;
  {$EXTERNALSYM D3D10_PRIMITIVE_TOPOLOGY_LINESTRIP_ADJ}
  D3D10_PRIMITIVE_TOPOLOGY_TRIANGLELIST_ADJ           = D3D_PRIMITIVE_TOPOLOGY_TRIANGLELIST_ADJ;
  {$EXTERNALSYM D3D10_PRIMITIVE_TOPOLOGY_TRIANGLELIST_ADJ}
  D3D10_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP_ADJ          = D3D_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP_ADJ;
  {$EXTERNALSYM D3D10_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP_ADJ}
  D3D11_PRIMITIVE_TOPOLOGY_UNDEFINED                  = D3D_PRIMITIVE_TOPOLOGY_UNDEFINED;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_UNDEFINED}
  D3D11_PRIMITIVE_TOPOLOGY_POINTLIST                  = D3D_PRIMITIVE_TOPOLOGY_POINTLIST;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_POINTLIST}
  D3D11_PRIMITIVE_TOPOLOGY_LINELIST                   = D3D_PRIMITIVE_TOPOLOGY_LINELIST;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_LINELIST}
  D3D11_PRIMITIVE_TOPOLOGY_LINESTRIP                  = D3D_PRIMITIVE_TOPOLOGY_LINESTRIP;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_LINESTRIP}
  D3D11_PRIMITIVE_TOPOLOGY_TRIANGLELIST               = D3D_PRIMITIVE_TOPOLOGY_TRIANGLELIST;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_TRIANGLELIST}
  D3D11_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP              = D3D_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP}
  D3D11_PRIMITIVE_TOPOLOGY_LINELIST_ADJ               = D3D_PRIMITIVE_TOPOLOGY_LINELIST_ADJ;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_LINELIST_ADJ}
  D3D11_PRIMITIVE_TOPOLOGY_LINESTRIP_ADJ              = D3D_PRIMITIVE_TOPOLOGY_LINESTRIP_ADJ;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_LINESTRIP_ADJ}
  D3D11_PRIMITIVE_TOPOLOGY_TRIANGLELIST_ADJ           = D3D_PRIMITIVE_TOPOLOGY_TRIANGLELIST_ADJ;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_TRIANGLELIST_ADJ}
  D3D11_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP_ADJ          = D3D_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP_ADJ;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP_ADJ}
  D3D11_PRIMITIVE_TOPOLOGY_1_CONTROL_POINT_PATCHLIST  = D3D_PRIMITIVE_TOPOLOGY_1_CONTROL_POINT_PATCHLIST;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_1_CONTROL_POINT_PATCHLIST}
  D3D11_PRIMITIVE_TOPOLOGY_2_CONTROL_POINT_PATCHLIST  = D3D_PRIMITIVE_TOPOLOGY_2_CONTROL_POINT_PATCHLIST;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_2_CONTROL_POINT_PATCHLIST}
  D3D11_PRIMITIVE_TOPOLOGY_3_CONTROL_POINT_PATCHLIST  = D3D_PRIMITIVE_TOPOLOGY_3_CONTROL_POINT_PATCHLIST;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_3_CONTROL_POINT_PATCHLIST}
  D3D11_PRIMITIVE_TOPOLOGY_4_CONTROL_POINT_PATCHLIST  = D3D_PRIMITIVE_TOPOLOGY_4_CONTROL_POINT_PATCHLIST;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_4_CONTROL_POINT_PATCHLIST}
  D3D11_PRIMITIVE_TOPOLOGY_5_CONTROL_POINT_PATCHLIST  = D3D_PRIMITIVE_TOPOLOGY_5_CONTROL_POINT_PATCHLIST;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_5_CONTROL_POINT_PATCHLIST}
  D3D11_PRIMITIVE_TOPOLOGY_6_CONTROL_POINT_PATCHLIST  = D3D_PRIMITIVE_TOPOLOGY_6_CONTROL_POINT_PATCHLIST;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_6_CONTROL_POINT_PATCHLIST}
  D3D11_PRIMITIVE_TOPOLOGY_7_CONTROL_POINT_PATCHLIST  = D3D_PRIMITIVE_TOPOLOGY_7_CONTROL_POINT_PATCHLIST;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_7_CONTROL_POINT_PATCHLIST}
  D3D11_PRIMITIVE_TOPOLOGY_8_CONTROL_POINT_PATCHLIST  = D3D_PRIMITIVE_TOPOLOGY_8_CONTROL_POINT_PATCHLIST;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_8_CONTROL_POINT_PATCHLIST}
  D3D11_PRIMITIVE_TOPOLOGY_9_CONTROL_POINT_PATCHLIST  = D3D_PRIMITIVE_TOPOLOGY_9_CONTROL_POINT_PATCHLIST;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_9_CONTROL_POINT_PATCHLIST}
  D3D11_PRIMITIVE_TOPOLOGY_10_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_10_CONTROL_POINT_PATCHLIST;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_10_CONTROL_POINT_PATCHLIST}
  D3D11_PRIMITIVE_TOPOLOGY_11_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_11_CONTROL_POINT_PATCHLIST;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_11_CONTROL_POINT_PATCHLIST}
  D3D11_PRIMITIVE_TOPOLOGY_12_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_12_CONTROL_POINT_PATCHLIST;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_12_CONTROL_POINT_PATCHLIST}
  D3D11_PRIMITIVE_TOPOLOGY_13_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_13_CONTROL_POINT_PATCHLIST;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_13_CONTROL_POINT_PATCHLIST}
  D3D11_PRIMITIVE_TOPOLOGY_14_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_14_CONTROL_POINT_PATCHLIST;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_14_CONTROL_POINT_PATCHLIST}
  D3D11_PRIMITIVE_TOPOLOGY_15_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_15_CONTROL_POINT_PATCHLIST;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_15_CONTROL_POINT_PATCHLIST}
  D3D11_PRIMITIVE_TOPOLOGY_16_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_16_CONTROL_POINT_PATCHLIST;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_16_CONTROL_POINT_PATCHLIST}
  D3D11_PRIMITIVE_TOPOLOGY_17_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_17_CONTROL_POINT_PATCHLIST;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_17_CONTROL_POINT_PATCHLIST}
  D3D11_PRIMITIVE_TOPOLOGY_18_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_18_CONTROL_POINT_PATCHLIST;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_18_CONTROL_POINT_PATCHLIST}
  D3D11_PRIMITIVE_TOPOLOGY_19_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_19_CONTROL_POINT_PATCHLIST;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_19_CONTROL_POINT_PATCHLIST}
  D3D11_PRIMITIVE_TOPOLOGY_20_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_20_CONTROL_POINT_PATCHLIST;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_20_CONTROL_POINT_PATCHLIST}
  D3D11_PRIMITIVE_TOPOLOGY_21_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_21_CONTROL_POINT_PATCHLIST;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_21_CONTROL_POINT_PATCHLIST}
  D3D11_PRIMITIVE_TOPOLOGY_22_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_22_CONTROL_POINT_PATCHLIST;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_22_CONTROL_POINT_PATCHLIST}
  D3D11_PRIMITIVE_TOPOLOGY_23_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_23_CONTROL_POINT_PATCHLIST;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_23_CONTROL_POINT_PATCHLIST}
  D3D11_PRIMITIVE_TOPOLOGY_24_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_24_CONTROL_POINT_PATCHLIST;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_24_CONTROL_POINT_PATCHLIST}
  D3D11_PRIMITIVE_TOPOLOGY_25_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_25_CONTROL_POINT_PATCHLIST;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_25_CONTROL_POINT_PATCHLIST}
  D3D11_PRIMITIVE_TOPOLOGY_26_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_26_CONTROL_POINT_PATCHLIST;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_26_CONTROL_POINT_PATCHLIST}
  D3D11_PRIMITIVE_TOPOLOGY_27_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_27_CONTROL_POINT_PATCHLIST;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_27_CONTROL_POINT_PATCHLIST}
  D3D11_PRIMITIVE_TOPOLOGY_28_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_28_CONTROL_POINT_PATCHLIST;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_28_CONTROL_POINT_PATCHLIST}
  D3D11_PRIMITIVE_TOPOLOGY_29_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_29_CONTROL_POINT_PATCHLIST;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_29_CONTROL_POINT_PATCHLIST}
  D3D11_PRIMITIVE_TOPOLOGY_30_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_30_CONTROL_POINT_PATCHLIST;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_30_CONTROL_POINT_PATCHLIST}
  D3D11_PRIMITIVE_TOPOLOGY_31_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_31_CONTROL_POINT_PATCHLIST;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_31_CONTROL_POINT_PATCHLIST}
  D3D11_PRIMITIVE_TOPOLOGY_32_CONTROL_POINT_PATCHLIST = D3D_PRIMITIVE_TOPOLOGY_32_CONTROL_POINT_PATCHLIST;
  {$EXTERNALSYM D3D11_PRIMITIVE_TOPOLOGY_32_CONTROL_POINT_PATCHLIST}


type
  PD3D_PRIMITIVE = ^D3D_PRIMITIVE;
  D3D_PRIMITIVE = DWord;
  {$EXTERNALSYM D3D_PRIMITIVE}
const
  D3D_PRIMITIVE_UNDEFINED                = D3D_PRIMITIVE(0);
  {$EXTERNALSYM D3D_PRIMITIVE_UNDEFINED}
  D3D_PRIMITIVE_POINT                    = D3D_PRIMITIVE(1);
  {$EXTERNALSYM D3D_PRIMITIVE_POINT}
  D3D_PRIMITIVE_LINE                     = D3D_PRIMITIVE(2);
  {$EXTERNALSYM D3D_PRIMITIVE_LINE}
  D3D_PRIMITIVE_TRIANGLE                 = D3D_PRIMITIVE(3);
  {$EXTERNALSYM D3D_PRIMITIVE_TRIANGLE}
  // Adjacency values should be equal to ($4  non-adjacency):
  D3D_PRIMITIVE_LINE_ADJ                 = D3D_PRIMITIVE(6);
  {$EXTERNALSYM D3D_PRIMITIVE_LINE_ADJ}
  D3D_PRIMITIVE_TRIANGLE_ADJ             = D3D_PRIMITIVE(7);
  {$EXTERNALSYM D3D_PRIMITIVE_TRIANGLE_ADJ}
  D3D_PRIMITIVE_1_CONTROL_POINT_PATCH    = D3D_PRIMITIVE(8);
  {$EXTERNALSYM D3D_PRIMITIVE_1_CONTROL_POINT_PATCH}
  D3D_PRIMITIVE_2_CONTROL_POINT_PATCH    = D3D_PRIMITIVE(9);
  {$EXTERNALSYM D3D_PRIMITIVE_2_CONTROL_POINT_PATCH}
  D3D_PRIMITIVE_3_CONTROL_POINT_PATCH    = D3D_PRIMITIVE(10);
  {$EXTERNALSYM D3D_PRIMITIVE_3_CONTROL_POINT_PATCH}
  D3D_PRIMITIVE_4_CONTROL_POINT_PATCH    = D3D_PRIMITIVE(11);
  {$EXTERNALSYM D3D_PRIMITIVE_4_CONTROL_POINT_PATCH}
  D3D_PRIMITIVE_5_CONTROL_POINT_PATCH    = D3D_PRIMITIVE(12);
  {$EXTERNALSYM D3D_PRIMITIVE_5_CONTROL_POINT_PATCH}
  D3D_PRIMITIVE_6_CONTROL_POINT_PATCH    = D3D_PRIMITIVE(13);
  {$EXTERNALSYM D3D_PRIMITIVE_6_CONTROL_POINT_PATCH}
  D3D_PRIMITIVE_7_CONTROL_POINT_PATCH    = D3D_PRIMITIVE(14);
  {$EXTERNALSYM D3D_PRIMITIVE_7_CONTROL_POINT_PATCH}
  D3D_PRIMITIVE_8_CONTROL_POINT_PATCH    = D3D_PRIMITIVE(15);
  {$EXTERNALSYM D3D_PRIMITIVE_8_CONTROL_POINT_PATCH}
  D3D_PRIMITIVE_9_CONTROL_POINT_PATCH    = D3D_PRIMITIVE(16);
  {$EXTERNALSYM D3D_PRIMITIVE_9_CONTROL_POINT_PATCH}
  D3D_PRIMITIVE_10_CONTROL_POINT_PATCH   = D3D_PRIMITIVE(17);
  {$EXTERNALSYM D3D_PRIMITIVE_10_CONTROL_POINT_PATCH}
  D3D_PRIMITIVE_11_CONTROL_POINT_PATCH   = D3D_PRIMITIVE(18);
  {$EXTERNALSYM D3D_PRIMITIVE_11_CONTROL_POINT_PATCH}
  D3D_PRIMITIVE_12_CONTROL_POINT_PATCH   = D3D_PRIMITIVE(19);
  {$EXTERNALSYM D3D_PRIMITIVE_12_CONTROL_POINT_PATCH}
  D3D_PRIMITIVE_13_CONTROL_POINT_PATCH   = D3D_PRIMITIVE(20);
  {$EXTERNALSYM D3D_PRIMITIVE_13_CONTROL_POINT_PATCH}
  D3D_PRIMITIVE_14_CONTROL_POINT_PATCH   = D3D_PRIMITIVE(21);
  {$EXTERNALSYM D3D_PRIMITIVE_14_CONTROL_POINT_PATCH}
  D3D_PRIMITIVE_15_CONTROL_POINT_PATCH   = D3D_PRIMITIVE(22);
  {$EXTERNALSYM D3D_PRIMITIVE_15_CONTROL_POINT_PATCH}
  D3D_PRIMITIVE_16_CONTROL_POINT_PATCH   = D3D_PRIMITIVE(23);
  {$EXTERNALSYM D3D_PRIMITIVE_16_CONTROL_POINT_PATCH}
  D3D_PRIMITIVE_17_CONTROL_POINT_PATCH   = D3D_PRIMITIVE(24);
  {$EXTERNALSYM D3D_PRIMITIVE_17_CONTROL_POINT_PATCH}
  D3D_PRIMITIVE_18_CONTROL_POINT_PATCH   = D3D_PRIMITIVE(25);
  {$EXTERNALSYM D3D_PRIMITIVE_18_CONTROL_POINT_PATCH}
  D3D_PRIMITIVE_19_CONTROL_POINT_PATCH   = D3D_PRIMITIVE(26);
  {$EXTERNALSYM D3D_PRIMITIVE_19_CONTROL_POINT_PATCH}
  D3D_PRIMITIVE_20_CONTROL_POINT_PATCH   = D3D_PRIMITIVE(27);
  {$EXTERNALSYM D3D_PRIMITIVE_20_CONTROL_POINT_PATCH}
  D3D_PRIMITIVE_21_CONTROL_POINT_PATCH   = D3D_PRIMITIVE(28);
  {$EXTERNALSYM D3D_PRIMITIVE_21_CONTROL_POINT_PATCH}
  D3D_PRIMITIVE_22_CONTROL_POINT_PATCH   = D3D_PRIMITIVE(29);
  {$EXTERNALSYM D3D_PRIMITIVE_22_CONTROL_POINT_PATCH}
  D3D_PRIMITIVE_23_CONTROL_POINT_PATCH   = D3D_PRIMITIVE(30);
  {$EXTERNALSYM D3D_PRIMITIVE_23_CONTROL_POINT_PATCH}
  D3D_PRIMITIVE_24_CONTROL_POINT_PATCH   = D3D_PRIMITIVE(31);
  {$EXTERNALSYM D3D_PRIMITIVE_24_CONTROL_POINT_PATCH}
  D3D_PRIMITIVE_25_CONTROL_POINT_PATCH   = D3D_PRIMITIVE(32);
  {$EXTERNALSYM D3D_PRIMITIVE_25_CONTROL_POINT_PATCH}
  D3D_PRIMITIVE_26_CONTROL_POINT_PATCH   = D3D_PRIMITIVE(33);
  {$EXTERNALSYM D3D_PRIMITIVE_26_CONTROL_POINT_PATCH}
  D3D_PRIMITIVE_27_CONTROL_POINT_PATCH   = D3D_PRIMITIVE(34);
  {$EXTERNALSYM D3D_PRIMITIVE_27_CONTROL_POINT_PATCH}
  D3D_PRIMITIVE_28_CONTROL_POINT_PATCH   = D3D_PRIMITIVE(35);
  {$EXTERNALSYM D3D_PRIMITIVE_28_CONTROL_POINT_PATCH}
  D3D_PRIMITIVE_29_CONTROL_POINT_PATCH   = D3D_PRIMITIVE(36);
  {$EXTERNALSYM D3D_PRIMITIVE_29_CONTROL_POINT_PATCH}
  D3D_PRIMITIVE_30_CONTROL_POINT_PATCH   = D3D_PRIMITIVE(37);
  {$EXTERNALSYM D3D_PRIMITIVE_30_CONTROL_POINT_PATCH}
  D3D_PRIMITIVE_31_CONTROL_POINT_PATCH   = D3D_PRIMITIVE(38);
  {$EXTERNALSYM D3D_PRIMITIVE_31_CONTROL_POINT_PATCH}
  D3D_PRIMITIVE_32_CONTROL_POINT_PATCH   = D3D_PRIMITIVE(39);
  {$EXTERNALSYM D3D_PRIMITIVE_32_CONTROL_POINT_PATCH}
  D3D10_PRIMITIVE_UNDEFINED              = D3D_PRIMITIVE_UNDEFINED;
  {$EXTERNALSYM D3D10_PRIMITIVE_UNDEFINED}
  D3D10_PRIMITIVE_POINT                  = D3D_PRIMITIVE_POINT;
  {$EXTERNALSYM D3D10_PRIMITIVE_POINT}
  D3D10_PRIMITIVE_LINE                   = D3D_PRIMITIVE_LINE;
  {$EXTERNALSYM D3D10_PRIMITIVE_LINE}
  D3D10_PRIMITIVE_TRIANGLE               = D3D_PRIMITIVE_TRIANGLE;
  {$EXTERNALSYM D3D10_PRIMITIVE_TRIANGLE}
  D3D10_PRIMITIVE_LINE_ADJ               = D3D_PRIMITIVE_LINE_ADJ;
  {$EXTERNALSYM D3D10_PRIMITIVE_LINE_ADJ}
  D3D10_PRIMITIVE_TRIANGLE_ADJ           = D3D_PRIMITIVE_TRIANGLE_ADJ;
  {$EXTERNALSYM D3D10_PRIMITIVE_TRIANGLE_ADJ}
  D3D11_PRIMITIVE_UNDEFINED              = D3D_PRIMITIVE_UNDEFINED;
  {$EXTERNALSYM D3D11_PRIMITIVE_UNDEFINED}
  D3D11_PRIMITIVE_POINT                  = D3D_PRIMITIVE_POINT;
  {$EXTERNALSYM D3D11_PRIMITIVE_POINT}
  D3D11_PRIMITIVE_LINE                   = D3D_PRIMITIVE_LINE;
  {$EXTERNALSYM D3D11_PRIMITIVE_LINE}
  D3D11_PRIMITIVE_TRIANGLE               = D3D_PRIMITIVE_TRIANGLE;
  {$EXTERNALSYM D3D11_PRIMITIVE_TRIANGLE}
  D3D11_PRIMITIVE_LINE_ADJ               = D3D_PRIMITIVE_LINE_ADJ;
  {$EXTERNALSYM D3D11_PRIMITIVE_LINE_ADJ}
  D3D11_PRIMITIVE_TRIANGLE_ADJ           = D3D_PRIMITIVE_TRIANGLE_ADJ;
  {$EXTERNALSYM D3D11_PRIMITIVE_TRIANGLE_ADJ}
  D3D11_PRIMITIVE_1_CONTROL_POINT_PATCH  = D3D_PRIMITIVE_1_CONTROL_POINT_PATCH;
  {$EXTERNALSYM D3D11_PRIMITIVE_1_CONTROL_POINT_PATCH}
  D3D11_PRIMITIVE_2_CONTROL_POINT_PATCH  = D3D_PRIMITIVE_2_CONTROL_POINT_PATCH;
  {$EXTERNALSYM D3D11_PRIMITIVE_2_CONTROL_POINT_PATCH}
  D3D11_PRIMITIVE_3_CONTROL_POINT_PATCH  = D3D_PRIMITIVE_3_CONTROL_POINT_PATCH;
  {$EXTERNALSYM D3D11_PRIMITIVE_3_CONTROL_POINT_PATCH}
  D3D11_PRIMITIVE_4_CONTROL_POINT_PATCH  = D3D_PRIMITIVE_4_CONTROL_POINT_PATCH;
  {$EXTERNALSYM D3D11_PRIMITIVE_4_CONTROL_POINT_PATCH}
  D3D11_PRIMITIVE_5_CONTROL_POINT_PATCH  = D3D_PRIMITIVE_5_CONTROL_POINT_PATCH;
  {$EXTERNALSYM D3D11_PRIMITIVE_5_CONTROL_POINT_PATCH}
  D3D11_PRIMITIVE_6_CONTROL_POINT_PATCH  = D3D_PRIMITIVE_6_CONTROL_POINT_PATCH;
  {$EXTERNALSYM D3D11_PRIMITIVE_6_CONTROL_POINT_PATCH}
  D3D11_PRIMITIVE_7_CONTROL_POINT_PATCH  = D3D_PRIMITIVE_7_CONTROL_POINT_PATCH;
  {$EXTERNALSYM D3D11_PRIMITIVE_7_CONTROL_POINT_PATCH}
  D3D11_PRIMITIVE_8_CONTROL_POINT_PATCH  = D3D_PRIMITIVE_8_CONTROL_POINT_PATCH;
  {$EXTERNALSYM D3D11_PRIMITIVE_8_CONTROL_POINT_PATCH}
  D3D11_PRIMITIVE_9_CONTROL_POINT_PATCH  = D3D_PRIMITIVE_9_CONTROL_POINT_PATCH;
  {$EXTERNALSYM D3D11_PRIMITIVE_9_CONTROL_POINT_PATCH}
  D3D11_PRIMITIVE_10_CONTROL_POINT_PATCH = D3D_PRIMITIVE_10_CONTROL_POINT_PATCH;
  {$EXTERNALSYM D3D11_PRIMITIVE_10_CONTROL_POINT_PATCH}
  D3D11_PRIMITIVE_11_CONTROL_POINT_PATCH = D3D_PRIMITIVE_11_CONTROL_POINT_PATCH;
  {$EXTERNALSYM D3D11_PRIMITIVE_11_CONTROL_POINT_PATCH}
  D3D11_PRIMITIVE_12_CONTROL_POINT_PATCH = D3D_PRIMITIVE_12_CONTROL_POINT_PATCH;
  {$EXTERNALSYM D3D11_PRIMITIVE_12_CONTROL_POINT_PATCH}
  D3D11_PRIMITIVE_13_CONTROL_POINT_PATCH = D3D_PRIMITIVE_13_CONTROL_POINT_PATCH;
  {$EXTERNALSYM D3D11_PRIMITIVE_13_CONTROL_POINT_PATCH}
  D3D11_PRIMITIVE_14_CONTROL_POINT_PATCH = D3D_PRIMITIVE_14_CONTROL_POINT_PATCH;
  {$EXTERNALSYM D3D11_PRIMITIVE_14_CONTROL_POINT_PATCH}
  D3D11_PRIMITIVE_15_CONTROL_POINT_PATCH = D3D_PRIMITIVE_15_CONTROL_POINT_PATCH;
  {$EXTERNALSYM D3D11_PRIMITIVE_15_CONTROL_POINT_PATCH}
  D3D11_PRIMITIVE_16_CONTROL_POINT_PATCH = D3D_PRIMITIVE_16_CONTROL_POINT_PATCH;
  {$EXTERNALSYM D3D11_PRIMITIVE_16_CONTROL_POINT_PATCH}
  D3D11_PRIMITIVE_17_CONTROL_POINT_PATCH = D3D_PRIMITIVE_17_CONTROL_POINT_PATCH;
  {$EXTERNALSYM D3D11_PRIMITIVE_17_CONTROL_POINT_PATCH}
  D3D11_PRIMITIVE_18_CONTROL_POINT_PATCH = D3D_PRIMITIVE_18_CONTROL_POINT_PATCH;
  {$EXTERNALSYM D3D11_PRIMITIVE_18_CONTROL_POINT_PATCH}
  D3D11_PRIMITIVE_19_CONTROL_POINT_PATCH = D3D_PRIMITIVE_19_CONTROL_POINT_PATCH;
  {$EXTERNALSYM D3D11_PRIMITIVE_19_CONTROL_POINT_PATCH}
  D3D11_PRIMITIVE_20_CONTROL_POINT_PATCH = D3D_PRIMITIVE_20_CONTROL_POINT_PATCH;
  {$EXTERNALSYM D3D11_PRIMITIVE_20_CONTROL_POINT_PATCH}
  D3D11_PRIMITIVE_21_CONTROL_POINT_PATCH = D3D_PRIMITIVE_21_CONTROL_POINT_PATCH;
  {$EXTERNALSYM D3D11_PRIMITIVE_21_CONTROL_POINT_PATCH}
  D3D11_PRIMITIVE_22_CONTROL_POINT_PATCH = D3D_PRIMITIVE_22_CONTROL_POINT_PATCH;
  {$EXTERNALSYM D3D11_PRIMITIVE_22_CONTROL_POINT_PATCH}
  D3D11_PRIMITIVE_23_CONTROL_POINT_PATCH = D3D_PRIMITIVE_23_CONTROL_POINT_PATCH;
  {$EXTERNALSYM D3D11_PRIMITIVE_23_CONTROL_POINT_PATCH}
  D3D11_PRIMITIVE_24_CONTROL_POINT_PATCH = D3D_PRIMITIVE_24_CONTROL_POINT_PATCH;
  {$EXTERNALSYM D3D11_PRIMITIVE_24_CONTROL_POINT_PATCH}
  D3D11_PRIMITIVE_25_CONTROL_POINT_PATCH = D3D_PRIMITIVE_25_CONTROL_POINT_PATCH;
  {$EXTERNALSYM D3D11_PRIMITIVE_25_CONTROL_POINT_PATCH}
  D3D11_PRIMITIVE_26_CONTROL_POINT_PATCH = D3D_PRIMITIVE_26_CONTROL_POINT_PATCH;
  {$EXTERNALSYM D3D11_PRIMITIVE_26_CONTROL_POINT_PATCH}
  D3D11_PRIMITIVE_27_CONTROL_POINT_PATCH = D3D_PRIMITIVE_27_CONTROL_POINT_PATCH;
  {$EXTERNALSYM D3D11_PRIMITIVE_27_CONTROL_POINT_PATCH}
  D3D11_PRIMITIVE_28_CONTROL_POINT_PATCH = D3D_PRIMITIVE_28_CONTROL_POINT_PATCH;
  {$EXTERNALSYM D3D11_PRIMITIVE_28_CONTROL_POINT_PATCH}
  D3D11_PRIMITIVE_29_CONTROL_POINT_PATCH = D3D_PRIMITIVE_29_CONTROL_POINT_PATCH;
  {$EXTERNALSYM D3D11_PRIMITIVE_29_CONTROL_POINT_PATCH}
  D3D11_PRIMITIVE_30_CONTROL_POINT_PATCH = D3D_PRIMITIVE_30_CONTROL_POINT_PATCH;
  {$EXTERNALSYM D3D11_PRIMITIVE_30_CONTROL_POINT_PATCH}
  D3D11_PRIMITIVE_31_CONTROL_POINT_PATCH = D3D_PRIMITIVE_31_CONTROL_POINT_PATCH;
  {$EXTERNALSYM D3D11_PRIMITIVE_31_CONTROL_POINT_PATCH}
  D3D11_PRIMITIVE_32_CONTROL_POINT_PATCH = D3D_PRIMITIVE_32_CONTROL_POINT_PATCH;
  {$EXTERNALSYM D3D11_PRIMITIVE_32_CONTROL_POINT_PATCH}

type
  PD3D11_PRIMITIVE =^D3D11_PRIMITIVE;
  {$EXTERNALSYM D3D11_PRIMITIVE}
  D3D11_PRIMITIVE = D3D_PRIMITIVE;

type
  PD3D_SRV_DIMENSION = ^D3D_SRV_DIMENSION;
  D3D_SRV_DIMENSION = DWord;
  {$EXTERNALSYM D3D_SRV_DIMENSION}
const
  D3D_SRV_DIMENSION_UNKNOWN              = D3D_SRV_DIMENSION(0);
  {$EXTERNALSYM D3D_SRV_DIMENSION_UNKNOWN}
  D3D_SRV_DIMENSION_BUFFER               = D3D_SRV_DIMENSION(1);
  {$EXTERNALSYM D3D_SRV_DIMENSION_BUFFER}
  D3D_SRV_DIMENSION_TEXTURE1D            = D3D_SRV_DIMENSION(2);
  {$EXTERNALSYM D3D_SRV_DIMENSION_TEXTURE1D}
  D3D_SRV_DIMENSION_TEXTURE1DARRAY       = D3D_SRV_DIMENSION(3);
  {$EXTERNALSYM D3D_SRV_DIMENSION_TEXTURE1DARRAY}
  D3D_SRV_DIMENSION_TEXTURE2D            = D3D_SRV_DIMENSION(4);
  {$EXTERNALSYM D3D_SRV_DIMENSION_TEXTURE2D}
  D3D_SRV_DIMENSION_TEXTURE2DARRAY       = D3D_SRV_DIMENSION(5);
  {$EXTERNALSYM D3D_SRV_DIMENSION_TEXTURE2DARRAY}
  D3D_SRV_DIMENSION_TEXTURE2DMS          = D3D_SRV_DIMENSION(6);
  {$EXTERNALSYM D3D_SRV_DIMENSION_TEXTURE2DMS}
  D3D_SRV_DIMENSION_TEXTURE2DMSARRAY     = D3D_SRV_DIMENSION(7);
  {$EXTERNALSYM D3D_SRV_DIMENSION_TEXTURE2DMSARRAY}
  D3D_SRV_DIMENSION_TEXTURE3D            = D3D_SRV_DIMENSION(8);
  {$EXTERNALSYM D3D_SRV_DIMENSION_TEXTURE3D}
  D3D_SRV_DIMENSION_TEXTURECUBE          = D3D_SRV_DIMENSION(9);
  {$EXTERNALSYM D3D_SRV_DIMENSION_TEXTURECUBE}
  D3D_SRV_DIMENSION_TEXTURECUBEARRAY     = D3D_SRV_DIMENSION(10);
  {$EXTERNALSYM D3D_SRV_DIMENSION_TEXTURECUBEARRAY}
  D3D_SRV_DIMENSION_BUFFEREX             = D3D_SRV_DIMENSION(11);
  {$EXTERNALSYM D3D_SRV_DIMENSION_BUFFEREX}
  D3D10_SRV_DIMENSION_UNKNOWN            = D3D_SRV_DIMENSION_UNKNOWN;
  {$EXTERNALSYM D3D10_SRV_DIMENSION_UNKNOWN}
  D3D10_SRV_DIMENSION_BUFFER             = D3D_SRV_DIMENSION_BUFFER;
  {$EXTERNALSYM D3D10_SRV_DIMENSION_BUFFER}
  D3D10_SRV_DIMENSION_TEXTURE1D          = D3D_SRV_DIMENSION_TEXTURE1D;
  {$EXTERNALSYM D3D10_SRV_DIMENSION_TEXTURE1D}
  D3D10_SRV_DIMENSION_TEXTURE1DARRAY     = D3D_SRV_DIMENSION_TEXTURE1DARRAY;
  {$EXTERNALSYM D3D10_SRV_DIMENSION_TEXTURE1DARRAY}
  D3D10_SRV_DIMENSION_TEXTURE2D          = D3D_SRV_DIMENSION_TEXTURE2D;
  {$EXTERNALSYM D3D10_SRV_DIMENSION_TEXTURE2D}
  D3D10_SRV_DIMENSION_TEXTURE2DARRAY     = D3D_SRV_DIMENSION_TEXTURE2DARRAY;
  {$EXTERNALSYM D3D10_SRV_DIMENSION_TEXTURE2DARRAY}
  D3D10_SRV_DIMENSION_TEXTURE2DMS        = D3D_SRV_DIMENSION_TEXTURE2DMS;
  {$EXTERNALSYM D3D10_SRV_DIMENSION_TEXTURE2DMS}
  D3D10_SRV_DIMENSION_TEXTURE2DMSARRAY   = D3D_SRV_DIMENSION_TEXTURE2DMSARRAY;
  {$EXTERNALSYM D3D10_SRV_DIMENSION_TEXTURE2DMSARRAY}
  D3D10_SRV_DIMENSION_TEXTURE3D          = D3D_SRV_DIMENSION_TEXTURE3D;
  {$EXTERNALSYM D3D10_SRV_DIMENSION_TEXTURE3D}
  D3D10_SRV_DIMENSION_TEXTURECUBE        = D3D_SRV_DIMENSION_TEXTURECUBE;
  {$EXTERNALSYM D3D10_SRV_DIMENSION_TEXTURECUBE}
  D3D10_1_SRV_DIMENSION_UNKNOWN          = D3D_SRV_DIMENSION_UNKNOWN;
  {$EXTERNALSYM D3D10_1_SRV_DIMENSION_UNKNOWN}
  D3D10_1_SRV_DIMENSION_BUFFER           = D3D_SRV_DIMENSION_BUFFER;
  {$EXTERNALSYM D3D10_1_SRV_DIMENSION_BUFFER}
  D3D10_1_SRV_DIMENSION_TEXTURE1D        = D3D_SRV_DIMENSION_TEXTURE1D;
  {$EXTERNALSYM D3D10_1_SRV_DIMENSION_TEXTURE1D}
  D3D10_1_SRV_DIMENSION_TEXTURE1DARRAY   = D3D_SRV_DIMENSION_TEXTURE1DARRAY;
  {$EXTERNALSYM D3D10_1_SRV_DIMENSION_TEXTURE1DARRAY}
  D3D10_1_SRV_DIMENSION_TEXTURE2D        = D3D_SRV_DIMENSION_TEXTURE2D;
  {$EXTERNALSYM D3D10_1_SRV_DIMENSION_TEXTURE2D}
  D3D10_1_SRV_DIMENSION_TEXTURE2DARRAY   = D3D_SRV_DIMENSION_TEXTURE2DARRAY;
  {$EXTERNALSYM D3D10_1_SRV_DIMENSION_TEXTURE2DARRAY}
  D3D10_1_SRV_DIMENSION_TEXTURE2DMS      = D3D_SRV_DIMENSION_TEXTURE2DMS;
  {$EXTERNALSYM D3D10_1_SRV_DIMENSION_TEXTURE2DMS}
  D3D10_1_SRV_DIMENSION_TEXTURE2DMSARRAY = D3D_SRV_DIMENSION_TEXTURE2DMSARRAY;
  {$EXTERNALSYM D3D10_1_SRV_DIMENSION_TEXTURE2DMSARRAY}
  D3D10_1_SRV_DIMENSION_TEXTURE3D        = D3D_SRV_DIMENSION_TEXTURE3D;
  {$EXTERNALSYM D3D10_1_SRV_DIMENSION_TEXTURE3D}
  D3D10_1_SRV_DIMENSION_TEXTURECUBE      = D3D_SRV_DIMENSION_TEXTURECUBE;
  {$EXTERNALSYM D3D10_1_SRV_DIMENSION_TEXTURECUBE}
  D3D10_1_SRV_DIMENSION_TEXTURECUBEARRAY = D3D_SRV_DIMENSION_TEXTURECUBEARRAY;
  {$EXTERNALSYM D3D10_1_SRV_DIMENSION_TEXTURECUBEARRAY}
  D3D11_SRV_DIMENSION_UNKNOWN            = D3D_SRV_DIMENSION_UNKNOWN;
  {$EXTERNALSYM D3D11_SRV_DIMENSION_UNKNOWN}
  D3D11_SRV_DIMENSION_BUFFER             = D3D_SRV_DIMENSION_BUFFER;
  {$EXTERNALSYM D3D11_SRV_DIMENSION_BUFFER}
  D3D11_SRV_DIMENSION_TEXTURE1D          = D3D_SRV_DIMENSION_TEXTURE1D;
  {$EXTERNALSYM D3D11_SRV_DIMENSION_TEXTURE1D}
  D3D11_SRV_DIMENSION_TEXTURE1DARRAY     = D3D_SRV_DIMENSION_TEXTURE1DARRAY;
  {$EXTERNALSYM D3D11_SRV_DIMENSION_TEXTURE1DARRAY}
  D3D11_SRV_DIMENSION_TEXTURE2D          = D3D_SRV_DIMENSION_TEXTURE2D;
  {$EXTERNALSYM D3D11_SRV_DIMENSION_TEXTURE2D}
  D3D11_SRV_DIMENSION_TEXTURE2DARRAY     = D3D_SRV_DIMENSION_TEXTURE2DARRAY;
  {$EXTERNALSYM D3D11_SRV_DIMENSION_TEXTURE2DARRAY}
  D3D11_SRV_DIMENSION_TEXTURE2DMS        = D3D_SRV_DIMENSION_TEXTURE2DMS;
  {$EXTERNALSYM D3D11_SRV_DIMENSION_TEXTURE2DMS}
  D3D11_SRV_DIMENSION_TEXTURE2DMSARRAY   = D3D_SRV_DIMENSION_TEXTURE2DMSARRAY;
  {$EXTERNALSYM D3D11_SRV_DIMENSION_TEXTURE2DMSARRAY}
  D3D11_SRV_DIMENSION_TEXTURE3D          = D3D_SRV_DIMENSION_TEXTURE3D;
  {$EXTERNALSYM D3D11_SRV_DIMENSION_TEXTURE3D}
  D3D11_SRV_DIMENSION_TEXTURECUBE        = D3D_SRV_DIMENSION_TEXTURECUBE;
  {$EXTERNALSYM D3D11_SRV_DIMENSION_TEXTURECUBE}
  D3D11_SRV_DIMENSION_TEXTURECUBEARRAY   = D3D_SRV_DIMENSION_TEXTURECUBEARRAY;
  {$EXTERNALSYM D3D11_SRV_DIMENSION_TEXTURECUBEARRAY}
  D3D11_SRV_DIMENSION_BUFFEREX           = D3D_SRV_DIMENSION_BUFFEREX;
  {$EXTERNALSYM D3D11_SRV_DIMENSION_BUFFEREX}

type
  PD3D_INCLUDE_TYPE = ^_D3D_INCLUDE_TYPE;
  _D3D_INCLUDE_TYPE = DWord;
  {$EXTERNALSYM _D3D_INCLUDE_TYPE}
  D3D_INCLUDE_TYPE = _D3D_INCLUDE_TYPE;
  {$EXTERNALSYM D3D_INCLUDE_TYPE}
const
  D3D_INCLUDE_LOCAL       = D3D_INCLUDE_TYPE(0);
  D3D_INCLUDE_SYSTEM      = D3D_INCLUDE_TYPE(1);
  D3D10_INCLUDE_LOCAL     = D3D_INCLUDE_LOCAL;
  D3D10_INCLUDE_SYSTEM    = D3D_INCLUDE_SYSTEM;
  //D3D_INCLUDE_FORCE_DWORD = FORCEDWORD; // force 32-bit size enum



  //----------------------------------------------------------------------------
  //
  // Shader compilation information.
  //
  //----------------------------------------------------------------------------

  //----------------------------------------------------------------------------
  // D3D_SHADER_MACRO:
  // ----------
  // Preprocessor macro definition.  The application pass in a NULL-terminated
  // array of this structure to various D3D APIs.  This enables the application
  // to #define tokens at runtime, before the file is parsed.
  //----------------------------------------------------------------------------
type
  PD3D_SHADER_MACRO = ^_D3D_SHADER_MACRO;
  LPD3D_SHADER_MACRO = ^_D3D_SHADER_MACRO;
  _D3D_SHADER_MACRO = record
    Name: PAnsiChar;
    Definition: PAnsiChar;
  end;
  {$EXTERNALSYM _D3D_SHADER_MACRO}
  D3D_SHADER_MACRO = _D3D_SHADER_MACRO;
  {$EXTERNALSYM D3D_SHADER_MACRO}

  //----------------------------------------------------------------------------
  // ID3DBlob:
  // ------------
  // The buffer object is used by D3D to return arbitrary size data.
  // For compatibility with D3D10 this interface is also called ID3D10Blob,
  // but the version-neutral form is preferred.
  //
  // GetBufferPointer -
  //    Returns a pointer to the beginning of the buffer.
  //
  // GetBufferSize -
  //    Returns the size of the buffer, in bytes.
  //----------------------------------------------------------------------------

type

  // Interface ID3D10Blob
  // ====================
  // Blobs can be used as a data buffer, storing vertex, adjacency,
  // and material information during mesh optimization and loading operations.
  // Also, these objects are used to return object code and error messages in
  // APIs that compile vertex, geometry and pixel shaders.
  //
  {$HPPEMIT 'DECLARE_DINTERFACE_TYPE(ID3D10Blob);'}
  ID3D10Blob = interface(IUnknown)
  {$EXTERNALSYM ID3D10Blob}
  ['{8BA5FB08-5195-40e2-AC58-0D989C3A0102}']

    function GetBufferPointer(): Pointer {LPVOID}; stdcall;

    function GetBufferSize(): SIZE_T; stdcall;
  end;
  IID_ID3D10Blob = ID3D10Blob;

  {$EXTERNALSYM IID_ID3D10Blob}

  // ID3DDestructionNotifier interface
  //
  // ID3DDestructionNotifier: An interface to QI for, to set a callback which is
  //                          triggered when the object is fully destroyed
  FN_DESTRUCTION_CALLBACK = procedure(pData: Pointer); stdcall;
  {$EXTERNALSYM FN_DESTRUCTION_CALLBACK}

  // Interface ID3DDestructionNotifier
  // =================================
  //
  {$HPPEMIT 'DECLARE_DINTERFACE_TYPE(ID3DDestructionNotifier);'}
  ID3DDestructionNotifier = interface(IUnknown)
  {$EXTERNALSYM ID3DDestructionNotifier}
  ['{a06eb39a-50da-425b-8c31-4eecd6c270f3}']

    function RegisterDestructionCallback(callbackFn: FN_DESTRUCTION_CALLBACK;
                                         pData: Pointer;
                                         out pCallbackID: UINT): HResult; stdcall;

    function UnregisterDestructionCallback(callbackID: UINT): HResult; stdcall;
  end;
  IID_ID3DDestructionNotifier = ID3DDestructionNotifier;
  {$EXTERNALSYM IID_ID3DDestructionNotifier}


  //----------------------------------------------------------------------------
  // ID3DInclude:
  // -------------
  // This interface is intended to be implemented by the application, and can
  // be used by various D3D APIs. This enables application-specific handling
  // of #include directives in source files.
  //
  // Open()
  //    Opens an include file. If successful, it should fill in ppData and
  //    pBytes. The data pointer returned must remain valid until Close is
  //    subsequently called. The name of the file is encoded in UTF-8 format.
  // Close()
  //    Closes an include file. If Open was successful, Close is guaranteed
  //    to be called before the API using this interface returns.
  //----------------------------------------------------------------------------


  // Delph Note: In the header this is declared as interface without IUnknown implementation.
  //             However, in delphi it's not possible to declare an interface like that.
  //             So, we implement IInterface
  PD3DINCLUDE = ^ID3DInclude;
  LPD3DINCLUDE = ^ID3DInclude;

  // Interface ID3DInclude
  // =====================
  //
  {$HPPEMIT 'DECLARE_DINTERFACE_TYPE(ID3DInclude);'}
  {$EXTERNALSYM ID3DInclude}
  ID3DInclude = interface(IInterface)
    function Open(IncludeType: D3D_INCLUDE_TYPE;
                  pFileName: LPCSTR;
                  pParentData: Pointer {LPVOID};
                  out ppData: Pointer {LPVOID};
                  var pBytes: UINT): HResult; stdcall;

    function Close(pData: Pointer): HResult; stdcall;

  end;
  IID_ID3DInclude = ID3DInclude;
  {$EXTERNALSYM IID_ID3DInclude}



  //----------------------------------------------------------------------------
  //
  // Shader reflection information.
  //
  //----------------------------------------------------------------------------
type
  PD3D_SHADER_VARIABLE_CLASS = ^_D3D_SHADER_VARIABLE_CLASS;
  _D3D_SHADER_VARIABLE_CLASS = DWord;
  {$EXTERNALSYM _D3D_SHADER_VARIABLE_CLASS}
  D3D_SHADER_VARIABLE_CLASS = _D3D_SHADER_VARIABLE_CLASS;
  {$EXTERNALSYM D3D_SHADER_VARIABLE_CLASS}
const
  D3D_SVC_SCALAR              = D3D_SHADER_VARIABLE_CLASS(0);
  {$EXTERNALSYM D3D_SVC_SCALAR}
  D3D_SVC_VECTOR              = D3D_SHADER_VARIABLE_CLASS(1);
  {$EXTERNALSYM D3D_SVC_VECTOR}
  D3D_SVC_MATRIX_ROWS         = D3D_SHADER_VARIABLE_CLASS(2);
  {$EXTERNALSYM D3D_SVC_MATRIX_ROWS}
  D3D_SVC_MATRIX_COLUMNS      = D3D_SHADER_VARIABLE_CLASS(3);
  {$EXTERNALSYM D3D_SVC_MATRIX_COLUMNS}
  D3D_SVC_OBJECT              = D3D_SHADER_VARIABLE_CLASS(4);
  {$EXTERNALSYM D3D_SVC_OBJECT}
  D3D_SVC_STRUCT              = D3D_SHADER_VARIABLE_CLASS(5);
  {$EXTERNALSYM D3D_SVC_STRUCT}
  D3D_SVC_INTERFACE_CLASS     = D3D_SHADER_VARIABLE_CLASS(6);
  {$EXTERNALSYM D3D_SVC_INTERFACE_CLASS}
  D3D_SVC_INTERFACE_POINTER   = D3D_SHADER_VARIABLE_CLASS(7);
  {$EXTERNALSYM D3D_SVC_INTERFACE_POINTER}
  D3D10_SVC_SCALAR            = D3D_SVC_SCALAR;
  {$EXTERNALSYM D3D10_SVC_SCALAR}
  D3D10_SVC_VECTOR            = D3D_SVC_VECTOR;
  {$EXTERNALSYM D3D10_SVC_VECTOR}
  D3D10_SVC_MATRIX_ROWS       = D3D_SVC_MATRIX_ROWS;
  {$EXTERNALSYM D3D10_SVC_MATRIX_ROWS}
  D3D10_SVC_MATRIX_COLUMNS    = D3D_SVC_MATRIX_COLUMNS;
  {$EXTERNALSYM D3D10_SVC_MATRIX_COLUMNS}
  D3D10_SVC_OBJECT            = D3D_SVC_OBJECT;
  {$EXTERNALSYM D3D10_SVC_OBJECT}
  D3D10_SVC_STRUCT            = D3D_SVC_STRUCT;
  {$EXTERNALSYM D3D10_SVC_STRUCT}
  D3D11_SVC_INTERFACE_CLASS   = D3D_SVC_INTERFACE_CLASS;
  {$EXTERNALSYM D3D11_SVC_INTERFACE_CLASS}
  D3D11_SVC_INTERFACE_POINTER = D3D_SVC_INTERFACE_POINTER;
  {$EXTERNALSYM D3D11_SVC_INTERFACE_POINTER}
  //D3D_SVC_FORCE_DWORD         = FORCEDWORD; // force 32-bit size enum


type
  PD3D_SHADER_VARIABLE_FLAGS = ^_D3D_SHADER_VARIABLE_FLAGS;
  _D3D_SHADER_VARIABLE_FLAGS = Dword;
  {$EXTERNALSYM _D3D_SHADER_VARIABLE_FLAGS}
  D3D_SHADER_VARIABLE_FLAGS = _D3D_SHADER_VARIABLE_FLAGS;
  {$EXTERNALSYM D3D_SHADER_VARIABLE_FLAGS}
const
  D3D_SVF_USERPACKED            = D3D_SHADER_VARIABLE_FLAGS(1);
  {$EXTERNALSYM D3D_SVF_USERPACKED}
  D3D_SVF_USED                  = D3D_SHADER_VARIABLE_FLAGS(2);
  {$EXTERNALSYM D3D_SVF_USED}
  D3D_SVF_INTERFACE_POINTER     = D3D_SHADER_VARIABLE_FLAGS(4);
  {$EXTERNALSYM D3D_SVF_INTERFACE_POINTER}
  D3D_SVF_INTERFACE_PARAMETER   = D3D_SHADER_VARIABLE_FLAGS(8);
  {$EXTERNALSYM D3D_SVF_INTERFACE_PARAMETER}
  D3D10_SVF_USERPACKED          = D3D_SVF_USERPACKED;
  {$EXTERNALSYM D3D10_SVF_USERPACKED}
  D3D10_SVF_USED                = D3D_SVF_USED;
  {$EXTERNALSYM D3D10_SVF_USED}
  D3D11_SVF_INTERFACE_POINTER   = D3D_SVF_INTERFACE_POINTER;
  {$EXTERNALSYM D3D11_SVF_INTERFACE_POINTER}
  D3D11_SVF_INTERFACE_PARAMETER = D3D_SVF_INTERFACE_PARAMETER;
  {$EXTERNALSYM D3D11_SVF_INTERFACE_PARAMETER}
  //D3D_SVF_FORCE_DWORD           = FORCEDWORD; // force 32-bit size enum


type
  PD3D_SHADER_VARIABLE_TYPE = ^_D3D_SHADER_VARIABLE_TYPE;
  _D3D_SHADER_VARIABLE_TYPE = DWord;
  {$EXTERNALSYM _D3D_SHADER_VARIABLE_TYPE}
  D3D_SHADER_VARIABLE_TYPE = _D3D_SHADER_VARIABLE_TYPE;
  {$EXTERNALSYM D3D_SHADER_VARIABLE_TYPE}
const
  {$EXTERNALSYM D3D_SVT_VOID}
  D3D_SVT_VOID                        = D3D_SHADER_VARIABLE_TYPE(0);
  {$EXTERNALSYM D3D_SVT_BOOL}
  D3D_SVT_BOOL                        = D3D_SHADER_VARIABLE_TYPE(1);
  {$EXTERNALSYM D3D_SVT_INT}
  D3D_SVT_INT                         = D3D_SHADER_VARIABLE_TYPE(2);
  {$EXTERNALSYM D3D_SVT_FLOAT}
  D3D_SVT_FLOAT                       = D3D_SHADER_VARIABLE_TYPE(3);
  {$EXTERNALSYM D3D_SVT_STRING}
  D3D_SVT_STRING                      = D3D_SHADER_VARIABLE_TYPE(4);
  {$EXTERNALSYM D3D_SVT_TEXTURE}
  D3D_SVT_TEXTURE                     = D3D_SHADER_VARIABLE_TYPE(5);
  {$EXTERNALSYM D3D_SVT_TEXTURE1D}
  D3D_SVT_TEXTURE1D                   = D3D_SHADER_VARIABLE_TYPE(6);
  {$EXTERNALSYM D3D_SVT_TEXTURE2D}
  D3D_SVT_TEXTURE2D                   = D3D_SHADER_VARIABLE_TYPE(7);
  {$EXTERNALSYM D3D_SVT_TEXTURE3D}
  D3D_SVT_TEXTURE3D                   = D3D_SHADER_VARIABLE_TYPE(8);
  {$EXTERNALSYM D3D_SVT_TEXTURECUBE}
  D3D_SVT_TEXTURECUBE                 = D3D_SHADER_VARIABLE_TYPE(9);
  {$EXTERNALSYM D3D_SVT_SAMPLER}
  D3D_SVT_SAMPLER                     = D3D_SHADER_VARIABLE_TYPE(10);
  {$EXTERNALSYM D3D_SVT_SAMPLER1D}
  D3D_SVT_SAMPLER1D                   = D3D_SHADER_VARIABLE_TYPE(11);
  {$EXTERNALSYM D3D_SVT_SAMPLER2D}
  D3D_SVT_SAMPLER2D                   = D3D_SHADER_VARIABLE_TYPE(12);
  {$EXTERNALSYM D3D_SVT_SAMPLER3D}
  D3D_SVT_SAMPLER3D                   = D3D_SHADER_VARIABLE_TYPE(13);
  {$EXTERNALSYM D3D_SVT_SAMPLERCUBE}
  D3D_SVT_SAMPLERCUBE                 = D3D_SHADER_VARIABLE_TYPE(14);
  {$EXTERNALSYM D3D_SVT_PIXELSHADER}
  D3D_SVT_PIXELSHADER                 = D3D_SHADER_VARIABLE_TYPE(15);
  {$EXTERNALSYM D3D_SVT_VERTEXSHADER}
  D3D_SVT_VERTEXSHADER                = D3D_SHADER_VARIABLE_TYPE(16);
  {$EXTERNALSYM D3D_SVT_PIXELFRAGMENT}
  D3D_SVT_PIXELFRAGMENT               = D3D_SHADER_VARIABLE_TYPE(17);
  {$EXTERNALSYM D3D_SVT_VERTEXFRAGMENT}
  D3D_SVT_VERTEXFRAGMENT              = D3D_SHADER_VARIABLE_TYPE(18);
  {$EXTERNALSYM D3D_SVT_UINT}
  D3D_SVT_UINT                        = D3D_SHADER_VARIABLE_TYPE(19);
  {$EXTERNALSYM D3D_SVT_UINT8}
  D3D_SVT_UINT8                       = D3D_SHADER_VARIABLE_TYPE(20);
  {$EXTERNALSYM D3D_SVT_GEOMETRYSHADER}
  D3D_SVT_GEOMETRYSHADER              = D3D_SHADER_VARIABLE_TYPE(21);
  {$EXTERNALSYM D3D_SVT_RASTERIZER}
  D3D_SVT_RASTERIZER                  = D3D_SHADER_VARIABLE_TYPE(22);
  {$EXTERNALSYM D3D_SVT_DEPTHSTENCIL}
  D3D_SVT_DEPTHSTENCIL                = D3D_SHADER_VARIABLE_TYPE(23);
  {$EXTERNALSYM D3D_SVT_BLEND}
  D3D_SVT_BLEND                       = D3D_SHADER_VARIABLE_TYPE(24);
  {$EXTERNALSYM D3D_SVT_BUFFER}
  D3D_SVT_BUFFER                      = D3D_SHADER_VARIABLE_TYPE(25);
  {$EXTERNALSYM D3D_SVT_CBUFFER}
  D3D_SVT_CBUFFER                     = D3D_SHADER_VARIABLE_TYPE(26);
  {$EXTERNALSYM D3D_SVT_TBUFFER}
  D3D_SVT_TBUFFER                     = D3D_SHADER_VARIABLE_TYPE(27);
  {$EXTERNALSYM D3D_SVT_TEXTURE1DARRAY}
  D3D_SVT_TEXTURE1DARRAY              = D3D_SHADER_VARIABLE_TYPE(28);
  {$EXTERNALSYM D3D_SVT_TEXTURE2DARRAY}
  D3D_SVT_TEXTURE2DARRAY              = D3D_SHADER_VARIABLE_TYPE(29);
  {$EXTERNALSYM D3D_SVT_RENDERTARGETVIEW}
  D3D_SVT_RENDERTARGETVIEW            = D3D_SHADER_VARIABLE_TYPE(30);
  {$EXTERNALSYM D3D_SVT_DEPTHSTENCILVIEW}
  D3D_SVT_DEPTHSTENCILVIEW            = D3D_SHADER_VARIABLE_TYPE(31);
  {$EXTERNALSYM D3D_SVT_TEXTURE2DMS}
  D3D_SVT_TEXTURE2DMS                 = D3D_SHADER_VARIABLE_TYPE(32);
  {$EXTERNALSYM D3D_SVT_TEXTURE2DMSARRAY}
  D3D_SVT_TEXTURE2DMSARRAY            = D3D_SHADER_VARIABLE_TYPE(33);
  {$EXTERNALSYM D3D_SVT_TEXTURECUBEARRAY}
  D3D_SVT_TEXTURECUBEARRAY            = D3D_SHADER_VARIABLE_TYPE(34);
  {$EXTERNALSYM D3D_SVT_HULLSHADER}
  D3D_SVT_HULLSHADER                  = D3D_SHADER_VARIABLE_TYPE(35);
  {$EXTERNALSYM D3D_SVT_DOMAINSHADER}
  D3D_SVT_DOMAINSHADER                = D3D_SHADER_VARIABLE_TYPE(36);
  {$EXTERNALSYM D3D_SVT_INTERFACE_POINTER}
  D3D_SVT_INTERFACE_POINTER           = D3D_SHADER_VARIABLE_TYPE(37);
  {$EXTERNALSYM D3D_SVT_COMPUTESHADER}
  D3D_SVT_COMPUTESHADER               = D3D_SHADER_VARIABLE_TYPE(38);
  {$EXTERNALSYM D3D_SVT_DOUBLE}
  D3D_SVT_DOUBLE                      = D3D_SHADER_VARIABLE_TYPE(39);
  {$EXTERNALSYM D3D_SVT_RWTEXTURE1D}
  D3D_SVT_RWTEXTURE1D                 = D3D_SHADER_VARIABLE_TYPE(40);
  {$EXTERNALSYM D3D_SVT_RWTEXTURE1DARRAY}
  D3D_SVT_RWTEXTURE1DARRAY            = D3D_SHADER_VARIABLE_TYPE(41);
  {$EXTERNALSYM D3D_SVT_RWTEXTURE2D}
  D3D_SVT_RWTEXTURE2D                 = D3D_SHADER_VARIABLE_TYPE(42);
  {$EXTERNALSYM D3D_SVT_RWTEXTURE2DARRAY}
  D3D_SVT_RWTEXTURE2DARRAY            = D3D_SHADER_VARIABLE_TYPE(43);
  {$EXTERNALSYM D3D_SVT_RWTEXTURE3D}
  D3D_SVT_RWTEXTURE3D                 = D3D_SHADER_VARIABLE_TYPE(44);
  {$EXTERNALSYM D3D_SVT_RWBUFFER}
  D3D_SVT_RWBUFFER                    = D3D_SHADER_VARIABLE_TYPE(45);
  {$EXTERNALSYM D3D_SVT_BYTEADDRESS_BUFFER}
  D3D_SVT_BYTEADDRESS_BUFFER          = D3D_SHADER_VARIABLE_TYPE(46);
  {$EXTERNALSYM D3D_SVT_RWBYTEADDRESS_BUFFER}
  D3D_SVT_RWBYTEADDRESS_BUFFER        = D3D_SHADER_VARIABLE_TYPE(47);
  {$EXTERNALSYM D3D_SVT_STRUCTURED_BUFFER}
  D3D_SVT_STRUCTURED_BUFFER           = D3D_SHADER_VARIABLE_TYPE(48);
  {$EXTERNALSYM D3D_SVT_RWSTRUCTURED_BUFFER}
  D3D_SVT_RWSTRUCTURED_BUFFER         = D3D_SHADER_VARIABLE_TYPE(49);
  {$EXTERNALSYM D3D_SVT_APPEND_STRUCTURED_BUFFER}
  D3D_SVT_APPEND_STRUCTURED_BUFFER    = D3D_SHADER_VARIABLE_TYPE(50);
  {$EXTERNALSYM D3D_SVT_CONSUME_STRUCTURED_BUFFER}
  D3D_SVT_CONSUME_STRUCTURED_BUFFER   = D3D_SHADER_VARIABLE_TYPE(51);
  {$EXTERNALSYM D3D_SVT_MIN8FLOAT}
  D3D_SVT_MIN8FLOAT                   = D3D_SHADER_VARIABLE_TYPE(52);
  {$EXTERNALSYM D3D_SVT_MIN10FLOAT}
  D3D_SVT_MIN10FLOAT                  = D3D_SHADER_VARIABLE_TYPE(53);
  {$EXTERNALSYM D3D_SVT_MIN16FLOAT}
  D3D_SVT_MIN16FLOAT                  = D3D_SHADER_VARIABLE_TYPE(54);
  {$EXTERNALSYM D3D_SVT_MIN12INT}
  D3D_SVT_MIN12INT                    = D3D_SHADER_VARIABLE_TYPE(55);
  {$EXTERNALSYM D3D_SVT_MIN16INT}
  D3D_SVT_MIN16INT                    = D3D_SHADER_VARIABLE_TYPE(56);
  {$EXTERNALSYM D3D_SVT_MIN16UINT}
  D3D_SVT_MIN16UINT                   = D3D_SHADER_VARIABLE_TYPE(57);
  {$EXTERNALSYM D3D10_SVT_VOID}
  D3D10_SVT_VOID                      = D3D_SVT_VOID;
  {$EXTERNALSYM D3D10_SVT_BOOL}
  D3D10_SVT_BOOL                      = D3D_SVT_BOOL;
  {$EXTERNALSYM D3D10_SVT_INT}
  D3D10_SVT_INT                       = D3D_SVT_INT;
  {$EXTERNALSYM D3D10_SVT_FLOAT}
  D3D10_SVT_FLOAT                     = D3D_SVT_FLOAT;
  {$EXTERNALSYM D3D10_SVT_STRING}
  D3D10_SVT_STRING                    = D3D_SVT_STRING;
  {$EXTERNALSYM D3D10_SVT_TEXTURE}
  D3D10_SVT_TEXTURE                   = D3D_SVT_TEXTURE;
  {$EXTERNALSYM D3D10_SVT_TEXTURE1D}
  D3D10_SVT_TEXTURE1D                 = D3D_SVT_TEXTURE1D;
  {$EXTERNALSYM D3D10_SVT_TEXTURE2D}
  D3D10_SVT_TEXTURE2D                 = D3D_SVT_TEXTURE2D;
  {$EXTERNALSYM D3D10_SVT_TEXTURE3D}
  D3D10_SVT_TEXTURE3D                 = D3D_SVT_TEXTURE3D;
  {$EXTERNALSYM D3D10_SVT_TEXTURECUBE}
  D3D10_SVT_TEXTURECUBE               = D3D_SVT_TEXTURECUBE;
  {$EXTERNALSYM D3D10_SVT_SAMPLER}
  D3D10_SVT_SAMPLER                   = D3D_SVT_SAMPLER;
  {$EXTERNALSYM D3D10_SVT_SAMPLER1D}
  D3D10_SVT_SAMPLER1D                 = D3D_SVT_SAMPLER1D;
  {$EXTERNALSYM D3D10_SVT_SAMPLER2D}
  D3D10_SVT_SAMPLER2D                 = D3D_SVT_SAMPLER2D;
  {$EXTERNALSYM D3D10_SVT_SAMPLER3D}
  D3D10_SVT_SAMPLER3D                 = D3D_SVT_SAMPLER3D;
  {$EXTERNALSYM D3D10_SVT_SAMPLERCUBE}
  D3D10_SVT_SAMPLERCUBE               = D3D_SVT_SAMPLERCUBE;
  {$EXTERNALSYM D3D10_SVT_PIXELSHADER}
  D3D10_SVT_PIXELSHADER               = D3D_SVT_PIXELSHADER;
  {$EXTERNALSYM D3D10_SVT_VERTEXSHADER}
  D3D10_SVT_VERTEXSHADER              = D3D_SVT_VERTEXSHADER;
  {$EXTERNALSYM D3D10_SVT_PIXELFRAGMENT}
  D3D10_SVT_PIXELFRAGMENT             = D3D_SVT_PIXELFRAGMENT;
  {$EXTERNALSYM D3D10_SVT_VERTEXFRAGMENT}
  D3D10_SVT_VERTEXFRAGMENT            = D3D_SVT_VERTEXFRAGMENT;
  {$EXTERNALSYM D3D10_SVT_UINT}
  D3D10_SVT_UINT                      = D3D_SVT_UINT;
  {$EXTERNALSYM D3D10_SVT_UINT8}
  D3D10_SVT_UINT8                     = D3D_SVT_UINT8;
  {$EXTERNALSYM D3D10_SVT_GEOMETRYSHADER}
  D3D10_SVT_GEOMETRYSHADER            = D3D_SVT_GEOMETRYSHADER;
  {$EXTERNALSYM D3D10_SVT_RASTERIZER}
  D3D10_SVT_RASTERIZER                = D3D_SVT_RASTERIZER;
  {$EXTERNALSYM D3D10_SVT_DEPTHSTENCIL}
  D3D10_SVT_DEPTHSTENCIL              = D3D_SVT_DEPTHSTENCIL;
  {$EXTERNALSYM D3D10_SVT_BLEND}
  D3D10_SVT_BLEND                     = D3D_SVT_BLEND;
  {$EXTERNALSYM D3D10_SVT_BUFFER}
  D3D10_SVT_BUFFER                    = D3D_SVT_BUFFER;
  {$EXTERNALSYM D3D10_SVT_CBUFFER}
  D3D10_SVT_CBUFFER                   = D3D_SVT_CBUFFER;
  {$EXTERNALSYM D3D10_SVT_TBUFFER}
  D3D10_SVT_TBUFFER                   = D3D_SVT_TBUFFER;
  {$EXTERNALSYM D3D10_SVT_TEXTURE1DARRAY}
  D3D10_SVT_TEXTURE1DARRAY            = D3D_SVT_TEXTURE1DARRAY;
  {$EXTERNALSYM D3D10_SVT_TEXTURE2DARRAY}
  D3D10_SVT_TEXTURE2DARRAY            = D3D_SVT_TEXTURE2DARRAY;
  {$EXTERNALSYM D3D10_SVT_RENDERTARGETVIEW}
  D3D10_SVT_RENDERTARGETVIEW          = D3D_SVT_RENDERTARGETVIEW;
  {$EXTERNALSYM D3D10_SVT_DEPTHSTENCILVIEW}
  D3D10_SVT_DEPTHSTENCILVIEW          = D3D_SVT_DEPTHSTENCILVIEW;
  {$EXTERNALSYM D3D10_SVT_TEXTURE2DMS}
  D3D10_SVT_TEXTURE2DMS               = D3D_SVT_TEXTURE2DMS;
  {$EXTERNALSYM D3D10_SVT_TEXTURE2DMSARRAY}
  D3D10_SVT_TEXTURE2DMSARRAY          = D3D_SVT_TEXTURE2DMSARRAY;
  {$EXTERNALSYM D3D10_SVT_TEXTURECUBEARRAY}
  D3D10_SVT_TEXTURECUBEARRAY          = D3D_SVT_TEXTURECUBEARRAY;
  {$EXTERNALSYM D3D11_SVT_HULLSHADER}
  D3D11_SVT_HULLSHADER                = D3D_SVT_HULLSHADER;
  {$EXTERNALSYM D3D11_SVT_DOMAINSHADER}
  D3D11_SVT_DOMAINSHADER              = D3D_SVT_DOMAINSHADER;
  {$EXTERNALSYM D3D11_SVT_INTERFACE_POINTER}
  D3D11_SVT_INTERFACE_POINTER         = D3D_SVT_INTERFACE_POINTER;
  {$EXTERNALSYM D3D11_SVT_COMPUTESHADER}
  D3D11_SVT_COMPUTESHADER             = D3D_SVT_COMPUTESHADER;
  {$EXTERNALSYM D3D11_SVT_DOUBLE}
  D3D11_SVT_DOUBLE                    = D3D_SVT_DOUBLE;
  {$EXTERNALSYM D3D11_SVT_RWTEXTURE1D}
  D3D11_SVT_RWTEXTURE1D               = D3D_SVT_RWTEXTURE1D;
  {$EXTERNALSYM D3D11_SVT_RWTEXTURE1DARRAY}
  D3D11_SVT_RWTEXTURE1DARRAY          = D3D_SVT_RWTEXTURE1DARRAY;
  {$EXTERNALSYM D3D11_SVT_RWTEXTURE2D}
  D3D11_SVT_RWTEXTURE2D               = D3D_SVT_RWTEXTURE2D;
  {$EXTERNALSYM D3D11_SVT_RWTEXTURE2DARRAY}
  D3D11_SVT_RWTEXTURE2DARRAY          = D3D_SVT_RWTEXTURE2DARRAY;
  {$EXTERNALSYM D3D11_SVT_RWTEXTURE3D}
  D3D11_SVT_RWTEXTURE3D               = D3D_SVT_RWTEXTURE3D;
  {$EXTERNALSYM D3D11_SVT_RWBUFFER}
  D3D11_SVT_RWBUFFER                  = D3D_SVT_RWBUFFER;
  {$EXTERNALSYM D3D11_SVT_BYTEADDRESS_BUFFER}
  D3D11_SVT_BYTEADDRESS_BUFFER        = D3D_SVT_BYTEADDRESS_BUFFER;
  {$EXTERNALSYM D3D11_SVT_RWBYTEADDRESS_BUFFER}
  D3D11_SVT_RWBYTEADDRESS_BUFFER      = D3D_SVT_RWBYTEADDRESS_BUFFER;
  {$EXTERNALSYM D3D11_SVT_STRUCTURED_BUFFER}
  D3D11_SVT_STRUCTURED_BUFFER         = D3D_SVT_STRUCTURED_BUFFER;
  {$EXTERNALSYM D3D11_SVT_RWSTRUCTURED_BUFFER}
  D3D11_SVT_RWSTRUCTURED_BUFFER       = D3D_SVT_RWSTRUCTURED_BUFFER;
  {$EXTERNALSYM D3D11_SVT_APPEND_STRUCTURED_BUFFER}
  D3D11_SVT_APPEND_STRUCTURED_BUFFER  = D3D_SVT_APPEND_STRUCTURED_BUFFER;
  {$EXTERNALSYM D3D11_SVT_CONSUME_STRUCTURED_BUFFER}
  D3D11_SVT_CONSUME_STRUCTURED_BUFFER = D3D_SVT_CONSUME_STRUCTURED_BUFFER;
  //D3D_SVT_FORCE_DWORD                 = FORCEDWORD;  // force 32-bit size enum


type
  PD3D_SHADER_INPUT_FLAGS = ^_D3D_SHADER_INPUT_FLAGS;
  _D3D_SHADER_INPUT_FLAGS = DWord;
  {$EXTERNALSYM _D3D_SHADER_INPUT_FLAGS}
  D3D_SHADER_INPUT_FLAGS = _D3D_SHADER_INPUT_FLAGS;
  {$EXTERNALSYM D3D_SHADER_INPUT_FLAGS}
const
  D3D_SIF_USERPACKED            = D3D_SHADER_INPUT_FLAGS($01);
  {$EXTERNALSYM D3D_SIF_USERPACKED}
  D3D_SIF_COMPARISON_SAMPLER    = D3D_SHADER_INPUT_FLAGS($02);  // is this a comparison sampler?
  {$EXTERNALSYM D3D_SIF_COMPARISON_SAMPLER}
  D3D_SIF_TEXTURE_COMPONENT_0   = D3D_SHADER_INPUT_FLAGS($04);  // this 2-bit value encodes c - 1; where c
  {$EXTERNALSYM D3D_SIF_TEXTURE_COMPONENT_0}
  D3D_SIF_TEXTURE_COMPONENT_1   = D3D_SHADER_INPUT_FLAGS($08);  // is the number of components in the texture
  {$EXTERNALSYM D3D_SIF_TEXTURE_COMPONENT_1}
  D3D_SIF_TEXTURE_COMPONENTS    = D3D_SHADER_INPUT_FLAGS($0C);
  {$EXTERNALSYM D3D_SIF_TEXTURE_COMPONENTS}
  D3D_SIF_UNUSED                = D3D_SHADER_INPUT_FLAGS($10);
  {$EXTERNALSYM D3D_SIF_UNUSED}
  D3D10_SIF_USERPACKED          = D3D_SIF_USERPACKED;
  {$EXTERNALSYM D3D10_SIF_USERPACKED}
  D3D10_SIF_COMPARISON_SAMPLER  = D3D_SIF_COMPARISON_SAMPLER;
  {$EXTERNALSYM D3D10_SIF_COMPARISON_SAMPLER}
  D3D10_SIF_TEXTURE_COMPONENT_0 = D3D_SIF_TEXTURE_COMPONENT_0;
  {$EXTERNALSYM D3D10_SIF_TEXTURE_COMPONENT_0}
  D3D10_SIF_TEXTURE_COMPONENT_1 = D3D_SIF_TEXTURE_COMPONENT_1;
  {$EXTERNALSYM D3D10_SIF_TEXTURE_COMPONENT_1}
  D3D10_SIF_TEXTURE_COMPONENTS  = D3D_SIF_TEXTURE_COMPONENTS;
  {$EXTERNALSYM D3D10_SIF_TEXTURE_COMPONENTS}
  //D3D_SIF_FORCE_DWORD           = FORCEDWORD;  // force 32-bit size enum


type
  PD3D_SHADER_INPUT_TYPE = ^_D3D_SHADER_INPUT_TYPE;
  _D3D_SHADER_INPUT_TYPE = DWord;
  {$EXTERNALSYM _D3D_SHADER_INPUT_TYPE}
  D3D_SHADER_INPUT_TYPE = _D3D_SHADER_INPUT_TYPE;
  {$EXTERNALSYM D3D_SHADER_INPUT_TYPE}
const
  D3D_SIT_CBUFFER                         = D3D_SHADER_INPUT_TYPE(0);
  {$EXTERNALSYM D3D_SIT_CBUFFER}
  D3D_SIT_TBUFFER                         = D3D_SHADER_INPUT_TYPE(1);
  {$EXTERNALSYM D3D_SIT_TBUFFER}
  D3D_SIT_TEXTURE                         = D3D_SHADER_INPUT_TYPE(2);
  {$EXTERNALSYM D3D_SIT_TEXTURE}
  D3D_SIT_SAMPLER                         = D3D_SHADER_INPUT_TYPE(3);
  {$EXTERNALSYM D3D_SIT_SAMPLER}
  D3D_SIT_UAV_RWTYPED                     = D3D_SHADER_INPUT_TYPE(4);
  {$EXTERNALSYM D3D_SIT_UAV_RWTYPED}
  D3D_SIT_STRUCTURED                      = D3D_SHADER_INPUT_TYPE(5);
  {$EXTERNALSYM D3D_SIT_STRUCTURED}
  D3D_SIT_UAV_RWSTRUCTURED                = D3D_SHADER_INPUT_TYPE(6);
  {$EXTERNALSYM D3D_SIT_UAV_RWSTRUCTURED}
  D3D_SIT_BYTEADDRESS                     = D3D_SHADER_INPUT_TYPE(7);
  {$EXTERNALSYM D3D_SIT_BYTEADDRESS}
  D3D_SIT_UAV_RWBYTEADDRESS               = D3D_SHADER_INPUT_TYPE(8);
  {$EXTERNALSYM D3D_SIT_UAV_RWBYTEADDRESS}
  D3D_SIT_UAV_APPEND_STRUCTURED           = D3D_SHADER_INPUT_TYPE(9);
  {$EXTERNALSYM D3D_SIT_UAV_APPEND_STRUCTURED}
  D3D_SIT_UAV_CONSUME_STRUCTURED          = D3D_SHADER_INPUT_TYPE(10);
  {$EXTERNALSYM D3D_SIT_UAV_CONSUME_STRUCTURED}
  D3D_SIT_UAV_RWSTRUCTURED_WITH_COUNTER   = D3D_SHADER_INPUT_TYPE(11);
  {$EXTERNALSYM D3D_SIT_UAV_RWSTRUCTURED_WITH_COUNTER}
  D3D10_SIT_CBUFFER                       = D3D_SIT_CBUFFER;
  {$EXTERNALSYM D3D10_SIT_CBUFFER}
  D3D10_SIT_TBUFFER                       = D3D_SIT_TBUFFER;
  {$EXTERNALSYM D3D10_SIT_TBUFFER}
  D3D10_SIT_TEXTURE                       = D3D_SIT_TEXTURE;
  {$EXTERNALSYM D3D10_SIT_TEXTURE}
  D3D10_SIT_SAMPLER                       = D3D_SIT_SAMPLER;
  {$EXTERNALSYM D3D10_SIT_SAMPLER}
  D3D11_SIT_UAV_RWTYPED                   = D3D_SIT_UAV_RWTYPED;
  {$EXTERNALSYM D3D11_SIT_UAV_RWTYPED}
  D3D11_SIT_STRUCTURED                    = D3D_SIT_STRUCTURED;
  {$EXTERNALSYM D3D11_SIT_STRUCTURED}
  D3D11_SIT_UAV_RWSTRUCTURED              = D3D_SIT_UAV_RWSTRUCTURED;
  {$EXTERNALSYM D3D11_SIT_UAV_RWSTRUCTURED}
  D3D11_SIT_BYTEADDRESS                   = D3D_SIT_BYTEADDRESS;
  {$EXTERNALSYM D3D11_SIT_BYTEADDRESS}
  D3D11_SIT_UAV_RWBYTEADDRESS             = D3D_SIT_UAV_RWBYTEADDRESS;
  {$EXTERNALSYM D3D11_SIT_UAV_RWBYTEADDRESS}
  D3D11_SIT_UAV_APPEND_STRUCTURED         = D3D_SIT_UAV_APPEND_STRUCTURED;
  {$EXTERNALSYM D3D11_SIT_UAV_APPEND_STRUCTURED}
  D3D11_SIT_UAV_CONSUME_STRUCTURED        = D3D_SIT_UAV_CONSUME_STRUCTURED;
  {$EXTERNALSYM D3D11_SIT_UAV_CONSUME_STRUCTURED}
  D3D11_SIT_UAV_RWSTRUCTURED_WITH_COUNTER = D3D_SIT_UAV_RWSTRUCTURED_WITH_COUNTER;
  {$EXTERNALSYM D3D11_SIT_UAV_RWSTRUCTURED_WITH_COUNTER}

type
  PD3D_SHADER_CBUFFER_FLAGS = ^_D3D_SHADER_CBUFFER_FLAGS;
  _D3D_SHADER_CBUFFER_FLAGS = DWord;
  {$EXTERNALSYM _D3D_SHADER_CBUFFER_FLAGS}
  D3D_SHADER_CBUFFER_FLAGS = _D3D_SHADER_CBUFFER_FLAGS;
  {$EXTERNALSYM D3D_SHADER_CBUFFER_FLAGS}
const
  D3D_CBF_USERPACKED   = D3D_SHADER_CBUFFER_FLAGS(1);
  D3D10_CBF_USERPACKED = D3D_CBF_USERPACKED;
  //D3D_CBF_FORCE_DWORD  = FORCEDWORD; // force 32-bit size enum


type
  PD3D_CBUFFER_TYPE = ^_D3D_CBUFFER_TYPE;
  _D3D_CBUFFER_TYPE = DWord;
  {$EXTERNALSYM _D3D_CBUFFER_TYPE}
  D3D_CBUFFER_TYPE = _D3D_CBUFFER_TYPE;
  {$EXTERNALSYM D3D_CBUFFER_TYPE}
const
  D3D_CT_CBUFFER              = D3D_CBUFFER_TYPE(0);
  {$EXTERNALSYM D3D_CT_CBUFFER}
  D3D_CT_TBUFFER              = D3D_CBUFFER_TYPE(1);
  {$EXTERNALSYM D3D_CT_TBUFFER}
  D3D_CT_INTERFACE_POINTERS   = D3D_CBUFFER_TYPE(2);
  {$EXTERNALSYM D3D_CT_INTERFACE_POINTERS}
  D3D_CT_RESOURCE_BIND_INFO   = D3D_CBUFFER_TYPE(3);
  {$EXTERNALSYM D3D_CT_RESOURCE_BIND_INFO}
  D3D10_CT_CBUFFER            = D3D_CT_CBUFFER;
  {$EXTERNALSYM D3D10_CT_CBUFFER}
  D3D10_CT_TBUFFER            = D3D_CT_TBUFFER;
  {$EXTERNALSYM D3D10_CT_TBUFFER}
  D3D11_CT_CBUFFER            = D3D_CT_CBUFFER;
  {$EXTERNALSYM D3D11_CT_CBUFFER}
  D3D11_CT_TBUFFER            = D3D_CT_TBUFFER;
  {$EXTERNALSYM D3D11_CT_TBUFFER}
  D3D11_CT_INTERFACE_POINTERS = D3D_CT_INTERFACE_POINTERS;
  {$EXTERNALSYM D3D11_CT_INTERFACE_POINTERS}
  D3D11_CT_RESOURCE_BIND_INFO = D3D_CT_RESOURCE_BIND_INFO;
  {$EXTERNALSYM D3D11_CT_RESOURCE_BIND_INFO}

type
  PD3D_NAME = ^D3D_NAME;
  D3D_NAME = DWord;
  {$EXTERNALSYM D3D_NAME}
const
  D3D_NAME_UNDEFINED                       = D3D_NAME(0);
  {$EXTERNALSYM D3D_NAME_UNDEFINED}
  // Names meaningful to both HLSL and hardware
  D3D_NAME_POSITION                        = D3D_NAME(1);
  {$EXTERNALSYM D3D_NAME_POSITION}
  D3D_NAME_CLIP_DISTANCE                   = D3D_NAME(2);
  {$EXTERNALSYM D3D_NAME_CLIP_DISTANCE}
  D3D_NAME_CULL_DISTANCE                   = D3D_NAME(3);
  {$EXTERNALSYM D3D_NAME_CULL_DISTANCE}
  D3D_NAME_RENDER_TARGET_ARRAY_INDEX       = D3D_NAME(4);
  {$EXTERNALSYM D3D_NAME_RENDER_TARGET_ARRAY_INDEX}
  D3D_NAME_VIEWPORT_ARRAY_INDEX            = D3D_NAME(5);
  {$EXTERNALSYM D3D_NAME_VIEWPORT_ARRAY_INDEX}
  D3D_NAME_VERTEX_ID                       = D3D_NAME(6);
  {$EXTERNALSYM D3D_NAME_VERTEX_ID}
  D3D_NAME_PRIMITIVE_ID                    = D3D_NAME(7);
  {$EXTERNALSYM D3D_NAME_PRIMITIVE_ID}
  D3D_NAME_INSTANCE_ID                     = D3D_NAME(8);
  {$EXTERNALSYM D3D_NAME_INSTANCE_ID}
  D3D_NAME_IS_FRONT_FACE                   = D3D_NAME(9);
  {$EXTERNALSYM D3D_NAME_IS_FRONT_FACE}
  D3D_NAME_SAMPLE_INDEX                    = D3D_NAME(10);
  {$EXTERNALSYM D3D_NAME_SAMPLE_INDEX}
  D3D_NAME_FINAL_QUAD_EDGE_TESSFACTOR      = D3D_NAME(11);
  {$EXTERNALSYM D3D_NAME_FINAL_QUAD_EDGE_TESSFACTOR}
  D3D_NAME_FINAL_QUAD_INSIDE_TESSFACTOR    = D3D_NAME(12);
  {$EXTERNALSYM D3D_NAME_FINAL_QUAD_INSIDE_TESSFACTOR}
  D3D_NAME_FINAL_TRI_EDGE_TESSFACTOR       = D3D_NAME(13);
  {$EXTERNALSYM D3D_NAME_FINAL_TRI_EDGE_TESSFACTOR}
  D3D_NAME_FINAL_TRI_INSIDE_TESSFACTOR     = D3D_NAME(14);
  {$EXTERNALSYM D3D_NAME_FINAL_TRI_INSIDE_TESSFACTOR}
  D3D_NAME_FINAL_LINE_DETAIL_TESSFACTOR    = D3D_NAME(15);
  {$EXTERNALSYM D3D_NAME_FINAL_LINE_DETAIL_TESSFACTOR}
  D3D_NAME_FINAL_LINE_DENSITY_TESSFACTOR   = D3D_NAME(16);
  {$EXTERNALSYM D3D_NAME_FINAL_LINE_DENSITY_TESSFACTOR}
  D3D_NAME_BARYCENTRICS                    = D3D_NAME(23);
  {$EXTERNALSYM D3D_NAME_BARYCENTRICS}
  D3D_NAME_SHADINGRATE                     = D3D_NAME(24);
  {$EXTERNALSYM D3D_NAME_SHADINGRATE}

  // Names meaningful to HLSL only
  D3D_NAME_TARGET                          = D3D_NAME(64);
  {$EXTERNALSYM D3D_NAME_TARGET}
  D3D_NAME_DEPTH                           = D3D_NAME(65);
  {$EXTERNALSYM D3D_NAME_DEPTH}
  D3D_NAME_COVERAGE                        = D3D_NAME(66);
  {$EXTERNALSYM D3D_NAME_COVERAGE}
  D3D_NAME_DEPTH_GREATER_EQUAL             = D3D_NAME(67);
  {$EXTERNALSYM D3D_NAME_DEPTH_GREATER_EQUAL}
  D3D_NAME_DEPTH_LESS_EQUAL                = D3D_NAME(68);
  {$EXTERNALSYM D3D_NAME_DEPTH_LESS_EQUAL}
  D3D_NAME_STENCIL_REF                     = D3D_NAME(69);
  {$EXTERNALSYM D3D_NAME_STENCIL_REF}
  D3D_NAME_INNER_COVERAGE                  = D3D_NAME(70);
  {$EXTERNALSYM D3D_NAME_INNER_COVERAGE}
  D3D10_NAME_UNDEFINED                     = D3D_NAME_UNDEFINED;
  {$EXTERNALSYM D3D10_NAME_UNDEFINED}
  D3D10_NAME_POSITION                      = D3D_NAME_POSITION;
  {$EXTERNALSYM D3D10_NAME_POSITION}
  D3D10_NAME_CLIP_DISTANCE                 = D3D_NAME_CLIP_DISTANCE;
  {$EXTERNALSYM D3D10_NAME_CLIP_DISTANCE}
  D3D10_NAME_CULL_DISTANCE                 = D3D_NAME_CULL_DISTANCE;
  {$EXTERNALSYM D3D10_NAME_CULL_DISTANCE}
  D3D10_NAME_RENDER_TARGET_ARRAY_INDEX     = D3D_NAME_RENDER_TARGET_ARRAY_INDEX;
  {$EXTERNALSYM D3D10_NAME_RENDER_TARGET_ARRAY_INDEX}
  D3D10_NAME_VIEWPORT_ARRAY_INDEX          = D3D_NAME_VIEWPORT_ARRAY_INDEX;
  {$EXTERNALSYM D3D10_NAME_VIEWPORT_ARRAY_INDEX}
  D3D10_NAME_VERTEX_ID                     = D3D_NAME_VERTEX_ID;
  {$EXTERNALSYM D3D10_NAME_VERTEX_ID}
  D3D10_NAME_PRIMITIVE_ID                  = D3D_NAME_PRIMITIVE_ID;
  {$EXTERNALSYM D3D10_NAME_PRIMITIVE_ID}
  D3D10_NAME_INSTANCE_ID                   = D3D_NAME_INSTANCE_ID;
  {$EXTERNALSYM D3D10_NAME_INSTANCE_ID}
  D3D10_NAME_IS_FRONT_FACE                 = D3D_NAME_IS_FRONT_FACE;
  {$EXTERNALSYM D3D10_NAME_IS_FRONT_FACE}
  D3D10_NAME_SAMPLE_INDEX                  = D3D_NAME_SAMPLE_INDEX;
  {$EXTERNALSYM D3D10_NAME_SAMPLE_INDEX}
  D3D10_NAME_TARGET                        = D3D_NAME_TARGET;
  {$EXTERNALSYM D3D10_NAME_TARGET}
  D3D10_NAME_DEPTH                         = D3D_NAME_DEPTH;
  {$EXTERNALSYM D3D10_NAME_DEPTH}
  D3D10_NAME_COVERAGE                      = D3D_NAME_COVERAGE;
  {$EXTERNALSYM D3D10_NAME_COVERAGE}
  D3D11_NAME_FINAL_QUAD_EDGE_TESSFACTOR    = D3D_NAME_FINAL_QUAD_EDGE_TESSFACTOR;
  {$EXTERNALSYM D3D11_NAME_FINAL_QUAD_EDGE_TESSFACTOR}
  D3D11_NAME_FINAL_QUAD_INSIDE_TESSFACTOR  = D3D_NAME_FINAL_QUAD_INSIDE_TESSFACTOR;
  {$EXTERNALSYM D3D11_NAME_FINAL_QUAD_INSIDE_TESSFACTOR}
  D3D11_NAME_FINAL_TRI_EDGE_TESSFACTOR     = D3D_NAME_FINAL_TRI_EDGE_TESSFACTOR;
  {$EXTERNALSYM D3D11_NAME_FINAL_TRI_EDGE_TESSFACTOR}
  D3D11_NAME_FINAL_TRI_INSIDE_TESSFACTOR   = D3D_NAME_FINAL_TRI_INSIDE_TESSFACTOR;
  {$EXTERNALSYM D3D11_NAME_FINAL_TRI_INSIDE_TESSFACTOR}
  D3D11_NAME_FINAL_LINE_DETAIL_TESSFACTOR  = D3D_NAME_FINAL_LINE_DETAIL_TESSFACTOR;
  {$EXTERNALSYM D3D11_NAME_FINAL_LINE_DETAIL_TESSFACTOR}
  D3D11_NAME_FINAL_LINE_DENSITY_TESSFACTOR = D3D_NAME_FINAL_LINE_DENSITY_TESSFACTOR;
  {$EXTERNALSYM D3D11_NAME_FINAL_LINE_DENSITY_TESSFACTOR}
  D3D11_NAME_DEPTH_GREATER_EQUAL           = D3D_NAME_DEPTH_GREATER_EQUAL;
  {$EXTERNALSYM D3D11_NAME_DEPTH_GREATER_EQUAL}
  D3D11_NAME_DEPTH_LESS_EQUAL              = D3D_NAME_DEPTH_LESS_EQUAL;
  {$EXTERNALSYM D3D11_NAME_DEPTH_LESS_EQUAL}
  D3D11_NAME_STENCIL_REF                   = D3D_NAME_STENCIL_REF;
  {$EXTERNALSYM D3D11_NAME_STENCIL_REF}
  D3D11_NAME_INNER_COVERAGE                = D3D_NAME_INNER_COVERAGE;
  {$EXTERNALSYM D3D11_NAME_INNER_COVERAGE}
  D3D12_NAME_BARYCENTRICS	                 = D3D_NAME_BARYCENTRICS;
  {$EXTERNALSYM D3D12_NAME_BARYCENTRICS}
  D3D12_NAME_SHADINGRATE	                 = D3D_NAME_SHADINGRATE;
  {$EXTERNALSYM D3D12_NAME_SHADINGRATE}

type
  PD3D_RESOURCE_RETURN_TYPE = ^D3D_RESOURCE_RETURN_TYPE;
  D3D_RESOURCE_RETURN_TYPE = DWord;
  {$EXTERNALSYM PD3D_RESOURCE_RETURN_TYPE}
const
  D3D_RETURN_TYPE_UNORM       = D3D_RESOURCE_RETURN_TYPE(1);
  {$EXTERNALSYM D3D_RETURN_TYPE_UNORM}
  D3D_RETURN_TYPE_SNORM       = D3D_RESOURCE_RETURN_TYPE(2);
  {$EXTERNALSYM D3D_RETURN_TYPE_SNORM}
  D3D_RETURN_TYPE_SINT        = D3D_RESOURCE_RETURN_TYPE(3);
  {$EXTERNALSYM D3D_RETURN_TYPE_SINT}
  D3D_RETURN_TYPE_UINT        = D3D_RESOURCE_RETURN_TYPE(4);
  {$EXTERNALSYM D3D_RETURN_TYPE_UINT}
  D3D_RETURN_TYPE_FLOAT       = D3D_RESOURCE_RETURN_TYPE(5);
  {$EXTERNALSYM D3D_RETURN_TYPE_FLOAT}
  D3D_RETURN_TYPE_MIXED       = D3D_RESOURCE_RETURN_TYPE(6);
  {$EXTERNALSYM D3D_RETURN_TYPE_MIXED}
  D3D_RETURN_TYPE_DOUBLE      = D3D_RESOURCE_RETURN_TYPE(7);
  {$EXTERNALSYM D3D_RETURN_TYPE_DOUBLE}
  D3D_RETURN_TYPE_CONTINUED   = D3D_RESOURCE_RETURN_TYPE(8);
  {$EXTERNALSYM D3D_RETURN_TYPE_CONTINUED}
  D3D10_RETURN_TYPE_UNORM     = D3D_RETURN_TYPE_UNORM;
  {$EXTERNALSYM D3D10_RETURN_TYPE_UNORM}
  D3D10_RETURN_TYPE_SNORM     = D3D_RETURN_TYPE_SNORM;
  {$EXTERNALSYM D3D10_RETURN_TYPE_SNORM}
  D3D10_RETURN_TYPE_SINT      = D3D_RETURN_TYPE_SINT;
  {$EXTERNALSYM D3D10_RETURN_TYPE_SINT}
  D3D10_RETURN_TYPE_UINT      = D3D_RETURN_TYPE_UINT;
  {$EXTERNALSYM D3D10_RETURN_TYPE_UINT}
  D3D10_RETURN_TYPE_FLOAT     = D3D_RETURN_TYPE_FLOAT;
  {$EXTERNALSYM D3D10_RETURN_TYPE_FLOAT}
  D3D10_RETURN_TYPE_MIXED     = D3D_RETURN_TYPE_MIXED;
  {$EXTERNALSYM D3D10_RETURN_TYPE_MIXED}
  D3D11_RETURN_TYPE_UNORM     = D3D_RETURN_TYPE_UNORM;
  {$EXTERNALSYM D3D11_RETURN_TYPE_UNORM}
  D3D11_RETURN_TYPE_SNORM     = D3D_RETURN_TYPE_SNORM;
  {$EXTERNALSYM D3D11_RETURN_TYPE_SNORM}
  D3D11_RETURN_TYPE_SINT      = D3D_RETURN_TYPE_SINT;
  {$EXTERNALSYM D3D11_RETURN_TYPE_SINT}
  D3D11_RETURN_TYPE_UINT      = D3D_RETURN_TYPE_UINT;
  {$EXTERNALSYM D3D11_RETURN_TYPE_UINT}
  D3D11_RETURN_TYPE_FLOAT     = D3D_RETURN_TYPE_FLOAT;
  {$EXTERNALSYM D3D11_RETURN_TYPE_FLOAT}
  D3D11_RETURN_TYPE_MIXED     = D3D_RETURN_TYPE_MIXED;
  {$EXTERNALSYM D3D11_RETURN_TYPE_MIXED}
  D3D11_RETURN_TYPE_DOUBLE    = D3D_RETURN_TYPE_DOUBLE;
  {$EXTERNALSYM D3D11_RETURN_TYPE_DOUBLE}
  D3D11_RETURN_TYPE_CONTINUED = D3D_RETURN_TYPE_CONTINUED;
  {$EXTERNALSYM D3D11_RETURN_TYPE_CONTINUED}

type
  PD3D_REGISTER_COMPONENT_TYPE = ^D3D_REGISTER_COMPONENT_TYPE;
  D3D_REGISTER_COMPONENT_TYPE = DWord;
  {$EXTERNALSYM D3D_REGISTER_COMPONENT_TYPE}
const
  D3D_REGISTER_COMPONENT_UNKNOWN   = D3D_REGISTER_COMPONENT_TYPE(0);
  {$EXTERNALSYM D3D_REGISTER_COMPONENT_UNKNOWN}
  D3D_REGISTER_COMPONENT_UINT32    = D3D_REGISTER_COMPONENT_TYPE(1);
  {$EXTERNALSYM D3D_REGISTER_COMPONENT_UINT32}
  D3D_REGISTER_COMPONENT_SINT32    = D3D_REGISTER_COMPONENT_TYPE(2);
  {$EXTERNALSYM D3D_REGISTER_COMPONENT_SINT32}
  D3D_REGISTER_COMPONENT_FLOAT32   = D3D_REGISTER_COMPONENT_TYPE(3);
  {$EXTERNALSYM D3D_REGISTER_COMPONENT_FLOAT32}
  D3D10_REGISTER_COMPONENT_UNKNOWN = D3D_REGISTER_COMPONENT_UNKNOWN;
  {$EXTERNALSYM D3D10_REGISTER_COMPONENT_UNKNOWN}
  D3D10_REGISTER_COMPONENT_UINT32  = D3D_REGISTER_COMPONENT_UINT32;
  {$EXTERNALSYM D3D10_REGISTER_COMPONENT_UINT32}
  D3D10_REGISTER_COMPONENT_SINT32  = D3D_REGISTER_COMPONENT_SINT32;
  {$EXTERNALSYM D3D10_REGISTER_COMPONENT_SINT32}
  D3D10_REGISTER_COMPONENT_FLOAT32 = D3D_REGISTER_COMPONENT_FLOAT32;
  {$EXTERNALSYM D3D10_REGISTER_COMPONENT_FLOAT32}

type
  PD3D_TESSELLATOR_DOMAIN = ^D3D_TESSELLATOR_DOMAIN;
  D3D_TESSELLATOR_DOMAIN = DWord;
  {$EXTERNALSYM D3D_TESSELLATOR_DOMAIN}
const
  D3D_TESSELLATOR_DOMAIN_UNDEFINED   = D3D_TESSELLATOR_DOMAIN(0);
  {$EXTERNALSYM D3D_TESSELLATOR_DOMAIN_UNDEFINED}
  D3D_TESSELLATOR_DOMAIN_ISOLINE     = D3D_TESSELLATOR_DOMAIN(1);
  {$EXTERNALSYM D3D_TESSELLATOR_DOMAIN_ISOLINE}
  D3D_TESSELLATOR_DOMAIN_TRI         = D3D_TESSELLATOR_DOMAIN(2);
  {$EXTERNALSYM D3D_TESSELLATOR_DOMAIN_TRI}
  D3D_TESSELLATOR_DOMAIN_QUAD        = D3D_TESSELLATOR_DOMAIN(3);
  {$EXTERNALSYM D3D_TESSELLATOR_DOMAIN_QUAD}
  D3D11_TESSELLATOR_DOMAIN_UNDEFINED = D3D_TESSELLATOR_DOMAIN_UNDEFINED;
  {$EXTERNALSYM D3D11_TESSELLATOR_DOMAIN_UNDEFINED}
  D3D11_TESSELLATOR_DOMAIN_ISOLINE   = D3D_TESSELLATOR_DOMAIN_ISOLINE;
  {$EXTERNALSYM D3D11_TESSELLATOR_DOMAIN_ISOLINE}
  D3D11_TESSELLATOR_DOMAIN_TRI       = D3D_TESSELLATOR_DOMAIN_TRI;
  {$EXTERNALSYM D3D11_TESSELLATOR_DOMAIN_TRI}
  D3D11_TESSELLATOR_DOMAIN_QUAD      = D3D_TESSELLATOR_DOMAIN_QUAD;
  {$EXTERNALSYM D3D11_TESSELLATOR_DOMAIN_QUAD}

type
  PD3D_TESSELLATOR_PARTITIONING = ^D3D_TESSELLATOR_PARTITIONING;
  D3D_TESSELLATOR_PARTITIONING = DWord;
  {$EXTERNALSYM D3D_TESSELLATOR_PARTITIONING}
const
  D3D_TESSELLATOR_PARTITIONING_UNDEFINED         = D3D_TESSELLATOR_PARTITIONING(0);
  {$EXTERNALSYM D3D_TESSELLATOR_PARTITIONING_UNDEFINED}
  D3D_TESSELLATOR_PARTITIONING_INTEGER           = D3D_TESSELLATOR_PARTITIONING(1);
  {$EXTERNALSYM D3D_TESSELLATOR_PARTITIONING_INTEGER}
  D3D_TESSELLATOR_PARTITIONING_POW2              = D3D_TESSELLATOR_PARTITIONING(2);
  {$EXTERNALSYM D3D_TESSELLATOR_PARTITIONING_POW2}
  D3D_TESSELLATOR_PARTITIONING_FRACTIONAL_ODD    = D3D_TESSELLATOR_PARTITIONING(3);
  {$EXTERNALSYM D3D_TESSELLATOR_PARTITIONING_FRACTIONAL_ODD}
  D3D_TESSELLATOR_PARTITIONING_FRACTIONAL_EVEN   = D3D_TESSELLATOR_PARTITIONING(4);
  {$EXTERNALSYM D3D_TESSELLATOR_PARTITIONING_FRACTIONAL_EVEN}
  D3D11_TESSELLATOR_PARTITIONING_UNDEFINED       = D3D_TESSELLATOR_PARTITIONING_UNDEFINED;
  {$EXTERNALSYM D3D11_TESSELLATOR_PARTITIONING_UNDEFINED}
  D3D11_TESSELLATOR_PARTITIONING_INTEGER         = D3D_TESSELLATOR_PARTITIONING_INTEGER;
  {$EXTERNALSYM D3D11_TESSELLATOR_PARTITIONING_INTEGER}
  D3D11_TESSELLATOR_PARTITIONING_POW2            = D3D_TESSELLATOR_PARTITIONING_POW2;
  {$EXTERNALSYM D3D11_TESSELLATOR_PARTITIONING_POW2}
  D3D11_TESSELLATOR_PARTITIONING_FRACTIONAL_ODD  = D3D_TESSELLATOR_PARTITIONING_FRACTIONAL_ODD;
  {$EXTERNALSYM D3D11_TESSELLATOR_PARTITIONING_FRACTIONAL_ODD}
  D3D11_TESSELLATOR_PARTITIONING_FRACTIONAL_EVEN = D3D_TESSELLATOR_PARTITIONING_FRACTIONAL_EVEN;
  {$EXTERNALSYM D3D11_TESSELLATOR_PARTITIONING_FRACTIONAL_EVEN}

type
  PD3D_TESSELLATOR_OUTPUT_PRIMITIVE = ^D3D_TESSELLATOR_OUTPUT_PRIMITIVE;
  D3D_TESSELLATOR_OUTPUT_PRIMITIVE = DWord;
  {$EXTERNALSYM D3D_TESSELLATOR_OUTPUT_PRIMITIVE}
const
  D3D_TESSELLATOR_OUTPUT_UNDEFINED      = D3D_TESSELLATOR_OUTPUT_PRIMITIVE(0);
  {$EXTERNALSYM D3D_TESSELLATOR_OUTPUT_UNDEFINED}
  D3D_TESSELLATOR_OUTPUT_POINT          = D3D_TESSELLATOR_OUTPUT_PRIMITIVE(1);
  {$EXTERNALSYM D3D_TESSELLATOR_OUTPUT_POINT}
  D3D_TESSELLATOR_OUTPUT_LINE           = D3D_TESSELLATOR_OUTPUT_PRIMITIVE(2);
  {$EXTERNALSYM D3D_TESSELLATOR_OUTPUT_LINE}
  D3D_TESSELLATOR_OUTPUT_TRIANGLE_CW    = D3D_TESSELLATOR_OUTPUT_PRIMITIVE(3);
  {$EXTERNALSYM D3D_TESSELLATOR_OUTPUT_TRIANGLE_CW}
  D3D_TESSELLATOR_OUTPUT_TRIANGLE_CCW   = D3D_TESSELLATOR_OUTPUT_PRIMITIVE(4);
  {$EXTERNALSYM D3D_TESSELLATOR_OUTPUT_TRIANGLE_CCW}
  D3D11_TESSELLATOR_OUTPUT_UNDEFINED    = D3D_TESSELLATOR_OUTPUT_UNDEFINED;
  {$EXTERNALSYM D3D11_TESSELLATOR_OUTPUT_UNDEFINED}
  D3D11_TESSELLATOR_OUTPUT_POINT        = D3D_TESSELLATOR_OUTPUT_POINT;
  {$EXTERNALSYM D3D11_TESSELLATOR_OUTPUT_POINT}
  D3D11_TESSELLATOR_OUTPUT_LINE         = D3D_TESSELLATOR_OUTPUT_LINE;
  {$EXTERNALSYM D3D11_TESSELLATOR_OUTPUT_LINE}
  D3D11_TESSELLATOR_OUTPUT_TRIANGLE_CW  = D3D_TESSELLATOR_OUTPUT_TRIANGLE_CW;
  {$EXTERNALSYM D3D11_TESSELLATOR_OUTPUT_TRIANGLE_CW}
  D3D11_TESSELLATOR_OUTPUT_TRIANGLE_CCW = D3D_TESSELLATOR_OUTPUT_TRIANGLE_CCW;
  {$EXTERNALSYM D3D11_TESSELLATOR_OUTPUT_TRIANGLE_CCW}

type
  PD3D_MIN_PRECISION = ^D3D_MIN_PRECISION;
  D3D_MIN_PRECISION = DWord;
  {$EXTERNALSYM D3D_MIN_PRECISION}
const
  D3D_MIN_PRECISION_DEFAULT   = D3D_MIN_PRECISION(0);  // Default precision for the shader model
  {$EXTERNALSYM D3D_MIN_PRECISION_DEFAULT}
  D3D_MIN_PRECISION_FLOAT_16  = D3D_MIN_PRECISION(1);  // Min 16 bit/component float
  {$EXTERNALSYM D3D_MIN_PRECISION_FLOAT_16}
  D3D_MIN_PRECISION_FLOAT_2_8 = D3D_MIN_PRECISION(2);  // Min 10(2.8)bit/comp. float
  {$EXTERNALSYM D3D_MIN_PRECISION_FLOAT_2_8}
  D3D_MIN_PRECISION_RESERVED  = D3D_MIN_PRECISION(3);  // Reserved for future use
  {$EXTERNALSYM D3D_MIN_PRECISION_RESERVED}
  D3D_MIN_PRECISION_SINT_16   = D3D_MIN_PRECISION(4);  // Min 16 bit/comp. signed integer
  {$EXTERNALSYM D3D_MIN_PRECISION_SINT_16}
  D3D_MIN_PRECISION_UINT_16   = D3D_MIN_PRECISION(5);  // Min 16 bit/comp. unsigned integer
  {$EXTERNALSYM D3D_MIN_PRECISION_UINT_16}             // These values are abstractions of width only for use in situations
                                                       // where a general width is needed instead of specific types.  They
                                                       // will never be used in shader operands.

  D3D_MIN_PRECISION_ANY_16    = D3D_MIN_PRECISION($F0);
  {$EXTERNALSYM D3D_MIN_PRECISION_ANY_16}
  D3D_MIN_PRECISION_ANY_10    = D3D_MIN_PRECISION($F1);
  {$EXTERNALSYM D3D_MIN_PRECISION_ANY_10}

type
  PD3D_INTERPOLATION_MODE = ^D3D_INTERPOLATION_MODE;
  D3D_INTERPOLATION_MODE = DWord;
  {$EXTERNALSYM D3D_INTERPOLATION_MODE}
const
  D3D_INTERPOLATION_UNDEFINED                     = D3D_INTERPOLATION_MODE(0);
  {$EXTERNALSYM D3D_INTERPOLATION_UNDEFINED}
  D3D_INTERPOLATION_CONSTANT                      = D3D_INTERPOLATION_MODE(1);
  {$EXTERNALSYM D3D_INTERPOLATION_CONSTANT}
  D3D_INTERPOLATION_LINEAR                        = D3D_INTERPOLATION_MODE(2);
  {$EXTERNALSYM D3D_INTERPOLATION_LINEAR}
  D3D_INTERPOLATION_LINEAR_CENTROID               = D3D_INTERPOLATION_MODE(3);
  {$EXTERNALSYM D3D_INTERPOLATION_LINEAR_CENTROID}
  D3D_INTERPOLATION_LINEAR_NOPERSPECTIVE          = D3D_INTERPOLATION_MODE(4);
  {$EXTERNALSYM D3D_INTERPOLATION_LINEAR_NOPERSPECTIVE}
  D3D_INTERPOLATION_LINEAR_NOPERSPECTIVE_CENTROID = D3D_INTERPOLATION_MODE(5);
  {$EXTERNALSYM D3D_INTERPOLATION_LINEAR_NOPERSPECTIVE_CENTROID}
  D3D_INTERPOLATION_LINEAR_SAMPLE                 = D3D_INTERPOLATION_MODE(6);
  {$EXTERNALSYM D3D_INTERPOLATION_LINEAR_SAMPLE}
  D3D_INTERPOLATION_LINEAR_NOPERSPECTIVE_SAMPLE   = D3D_INTERPOLATION_MODE(7);
  {$EXTERNALSYM D3D_INTERPOLATION_LINEAR_NOPERSPECTIVE_SAMPLE}

type
  // Parameter flags.
  PD3D_PARAMETER_FLAGS = ^_D3D_PARAMETER_FLAGS;
  _D3D_PARAMETER_FLAGS = DWord;
  {$EXTERNALSYM _D3D_PARAMETER_FLAGS}
  D3D_PARAMETER_FLAGS = _D3D_PARAMETER_FLAGS;
  {$EXTERNALSYM D3D_PARAMETER_FLAGS}
const
  D3D_PF_NONE        = D3D_PARAMETER_FLAGS($00000000);
  {$EXTERNALSYM D3D_PF_NONE}
  D3D_PF_IN          = D3D_PARAMETER_FLAGS($00000001);
  {$EXTERNALSYM D3D_PF_IN}
  D3D_PF_OUT         = D3D_PARAMETER_FLAGS($00000002);
  {$EXTERNALSYM D3D_PF_OUT}
  //D3D_PF_FORCE_DWORD = FORCEDWORD;


const

  // Well-Known Private Data IDs (WKPDID_*):

  // WKPDID_D3DDebugObjectName provides a unique name to objects in order to assist the developer during debugging.
  //
  // const char c_szName[] = "texture.jpg";
  // pObject->SetPrivateData( WKPDID_D3DDebugObjectName, sizeof( c_szName ) - 1, c_szName );
  WKPDID_D3DDebugObjectName    : TGUID = '{429b8c22-9188-4b0c-8742-acb0bf85c200}';
  {$EXTERNALSYM WKPDID_D3DDebugObjectName}
  WKPDID_D3DDebugObjectNameW   : TGUID = '{4cca5fd8-921f-42c8-8566-70caf2a9b741}';
  {$EXTERNALSYM WKPDID_D3DDebugObjectNameW}
  WKPDID_CommentStringW        : TGUID = '{d0149dc0-90e8-4ec8-8144-e900ad266bb2}';
  {$EXTERNALSYM WKPDID_CommentStringW}

 // We left the macro's out for now, because they lack documentation at this time.

const

  D3D_COMPONENT_MASK_X                = 1;
  {$EXTERNALSYM D3D_COMPONENT_MASK_X}
  D3D_COMPONENT_MASK_Y                = 2;
  {$EXTERNALSYM D3D_COMPONENT_MASK_Y}
  D3D_COMPONENT_MASK_Z                = 4;
  {$EXTERNALSYM D3D_COMPONENT_MASK_Z}
  D3D_COMPONENT_MASK_W                = 8;
  {$EXTERNALSYM D3D_COMPONENT_MASK_W}

  D3D_TEXTURE_LAYOUT_ROW_MAJOR             : TGUID = '{b5dc234f-72bb-4bec-9705-8cf258df6b6c}'; // Feature_D3D1XDisplayable
  {$EXTERNALSYM D3D_TEXTURE_LAYOUT_ROW_MAJOR}
  D3D_TEXTURE_LAYOUT_64KB_STANDARD_SWIZZLE : TGUID = '{4c0f29e3-3f5f-4d35-84c9-bc0983b62c28}'; // Feature_D3D1XDisplayable
  {$EXTERNALSYM D3D_TEXTURE_LAYOUT_64KB_STANDARD_SWIZZLE}


  // Additional Prototypes for ALL interfaces

  // End of Additional Prototypes

implementation

  // Implement Additional Prototypes here.

end.
